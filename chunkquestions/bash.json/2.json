[{"query":" Q26. What does the asterisk represent in this statement?","code":"bash\r\n<em>#!/usr/bin/env bash</em>\r\ncase $num in\r\n\t1)\r\n\techo \"one\"\r\n\t; ;\r\n\t2)\r\n\techo \"two\"\r\n\t; ;\r\n\t*)\r\n\techo \"a mystery\"\r\n\t; ;\r\nesac\r\n","options":[" a case that matches any value, providing a default option if nothing else catches that value\r\n"," a case only for what happens when the asterisk character is passed into the script\r\n"," the action of all of the other cases combined together\r\n"," an action that is taken for any input, even if it matches a specified condition\r\n\r\n"],"correctAns":1},{"query":" Q27. What Bash script will correctly create these files?","options":[" `touch file{1+10}.txt`\r\n"," `touch file{1-10}.txt`\r\n"," `touch file{1..10}.txt`\r\n"," `touch file(1..10).txt`\r\n\r\n"],"correctAns":3},{"query":" Q28. Which variable would you check to verify that the last command executed successfully?","options":[" `$$`\r\n"," `$?`\r\n"," `$!`\r\n"," `$@`\r\n\r\n"],"correctAns":2},{"query":" Q29. What is the output of this script?","code":"bash\r\n#!/bin/bash\r\nfname=john\r\njohn=thomas\r\necho ${!fname}\r\n","options":[" john\r\n"," thomas\r\n"," Syntax error\r\n"," blank\r\n\r\n"],"correctAns":2},{"query":" Q31. What is wrong with this script?","code":"bash\r\n#!/bin/bash\r\nread -p \"Enter your pet type.\" PET\r\nif [ $PET = dog ] ;then\r\n    echo \"You have a dog\"\r\nfi\r\n","options":[" If the value of PET doesn't match dog, the script will return a nonzero status code.\r\n"," There is nothing wrong with it. The condition checks the value of PET perfectly.\r\n"," It will fail if the user hits the Enter (Return) key without entering a pet name when prompted.\r\n"," The then statement needs to be on a separate line.\r\n\r\n"],"correctAns":3},{"query":" Q32. How can you gather history together for multiple terminals?","options":[" It just works by default.\r\n"," `history --shared`\r\n"," `history --combined`\r\n"," `shopt -s histappend`\r\n\r\n"],"correctAns":4},{"query":" Q33. What is the difference between the $@ and $\\* variables?","options":[" `$@` treats each quoted argument as a separate entity. `$*` treats the entire argument string as one entity.\r\n"," `$*` treats each quoted argument as a separate entity. `$@` treats the entire argument string as one entity.\r\n"," `$*` is used to count the arguments passed to a script, `$@` provides all arguments in one string.\r\n"," `$*` is the wildcard that includes all arguments with word splitting, `$@` holds the same data but in an array.\r\n\r\n"],"correctAns":1},{"query":" Q34. Which command is being run in this script to check if file.txt exists?","code":"bash\r\nif [ -f file.txt ]; then\r\n    echo \"file.txt exists\"\r\nfi\r\n","options":[" `/usr/bin/test`\r\n"," `/usr/bin/[`\r\n"," `the built-in [ command`\r\n"," `/usr/bin/[[`\r\n\r\n"],"correctAns":3},{"query":" Q35. What will be the output of this script?","code":"bash\r\n#!/bin/bash\r\nLinux=('Debian' 'Redhat' 'Ubuntu' 'Android' 'Fedora' 'Suse')\r\nx=3\r\n\r\nLinux=(${Linux[@]:0:$x} ${Linux[@]:$(($x + 1))})\r\necho \"${Linux[@]}\"\r\n","options":[" Debian Redhat Ubuntu Android Fedora Suse\r\n"," Android\r\n"," Fedora Suse\r\n"," Debian Redhat Ubuntu Fedora Suse\r\n\r\n"],"correctAns":4},{"query":" Q36. Which file allows you to save modifications to the shell environment across sessions?","options":[" `/etc/bash.conf`\r\n"," `~/.profile`\r\n"," `/etc/bashprofile`\r\n"," `~/profile`\r\n\r\n"],"correctAns":2},{"query":" Q37. Given the listed permissions on data.txt is it possible that user2 could have read, write, and execute permissions on data.txt?","code":"bash\r\n$ ls -l\r\ntotal 0\r\n-rwx------+ 1 user1 user1 0 Oct 27 10:54 data.txt\r\n","options":[" No, it's clear that user2 does not have read, write, and execute permissions.\r\n"," Yes, the `+` at the end of the 10-digit permission string signifies there's an access control list. This could possibly give user2 permissions not visible by `ls -l`.\r\n"," It's possible that SELinux provides read, write, and execute permissions for user2 which are not visible with `ls -l`.\r\n"," Yes, the `+` at the end of the 10-digit permission string signifies there's an extended attribute set. This could give user2 permissions to read, write, and execute data.txt.\r\n\r\n"],"correctAns":2},{"query":" Q38. What does this script accomplish?","code":"bash\r\n#!/bin/bash\r\ndeclare -A ARRAY=([user1]=bob [user2]=ted [user3]=sally)\r\nKEYS=(${!ARRAY[@]})\r\n\r\nfor (( i=0; $i < ${#ARRAY[@]}; i+=1 ));do\r\n        echo ${KEYS[$i]} - ${ARRAY[${KEYS[$i]}]}\r\ndone\r\n","options":[" It sorts the associative array named ARRAY and stores the results in an indexed array named KEYS. It then uses this sorted array to loop through the associative array ARRAY.\r\n"," Using a C-style for loop, it loops through the associative array named ARRAY using the associative array's keys and outputs both the key and values for each item.\r\n"," It creates an indexed array of the associative array named ARRAY. It then uses a C-style for loop and the indexed array to loop through all items in the associative array, outputting the key and value of each array item using the index number.\r\n"," It creates an associative array named ARRAY, which it loops through using a C-style for loop and the index numbers of each item in the associative array's keys, outputting the value of each item.\r\n\r\n"],"correctAns":2},{"query":" Q39. What file would match the code below?","code":"bash\r\nls Hello[[.vertical-line.]]World\r\n","options":[" Nothing, this is an invalid file glob.\r\n"," `Hello.vertical-line.World`\r\n"," `Hello[[.vertical-line.]]World`\r\n"," `Hello|World`\r\n\r\n"],"correctAns":4},{"query":" Q40. What will be in out.txt?","code":"bash\r\nls nonexistentfile | grep \"No such file\" > out.txt\r\n","options":[" No such file\r\n"," ls: cannot access nonexistentfile: No such file or directory\r\n"," Nothing, out.txt will be empty.\r\n"," It will be the contents of nonexistentfile.\r\n\r\n"],"correctAns":3},{"query":" Q41. For the script to print \"Is numeric\" on screen, what would the user have to enter when prompted?","code":"bash\r\n#!/bin/bash\r\nread -p \"Enter text \" var\r\nif [[ \"$var\" =~ \"^[0-9]+$\" ]];then\r\n    echo \"Is numeric\"\r\nelse\r\n    echo \"Is not numeric\"\r\nfi\r\n","options":[" Any sequence of characters that includes an integer\r\n"," The user would have to enter the character sequence of `^[0-9]]+$` Only this will prove to be true and \"Is numeric\" would be printed on the screen due to incorrect syntax. By encapsulating the regular expression in double quotes every match will fail except the text string `^[0-9]+$`\r\n"," One or more characters that only includes integers\r\n"," Due to a syntax error it is impossible to get the script to print \"Is numeric\"\r\n\r\nThe regex must not be quoted to work properly.\r\n\r\n"],"correctAns":4},{"query":" Q42. What will be the difference between the output on the screen and the contents of out.txt","code":"bash\r\nmysql < file.sql > out.txt\r\n","options":[" The output on the screen will be identical to out.txt\r\n"," There will be no output on the screen as it's being redirected to out.txt.\r\n"," The output on the screen will be identical to out.txt plus line numbers.\r\n"," The out.txt file will hold STDERR and STDOUT will go to the screen.\r\n\r\n"],"correctAns":2},{"query":" Q43. How would you find the last copy command run in your history?","options":[" history | find cp\r\n"," history | grep cp\r\n"," grep cp history\r\n"," cp history\r\n\r\n"],"correctAns":2},{"query":" Q44. In order to write a script that iterates through the files in a directory, which of the following could you use?","options":[" `bash for i in $(ls); do ... done`\r\n"," `bash for $(ls); do ... done`\r\n"," `bash for i in $ls; do ... done`\r\n"," `bash for $ls; do ... done`\r\n\r\n"],"correctAns":1},{"query":" Q45 When executing a command and passing the output of that command to another command, which character allows you to chain these commands together?","options":[" |\r\n"," ->\r\n"," \\#\r\n"," @\r\n\r\n"],"correctAns":1},{"query":" Q46. In the script shown below, what is **greeting**?","code":"bash\r\n<em>#!/usr/bin/env bash</em>\r\ngreeting=\"Hello\"\r\necho $greeting, everybody!\r\n","options":[" a command\r\n"," a loop\r\n"," a parameter\r\n"," a vairable\r\n\r\n"],"correctAns":4},{"query":" Q47. Which statement checks whether the variable num is greater than five?","options":[" `(( \\$num -gt 5 ))`\r\n"," `[[$num -lt 5]]`\r\n"," `(( \\$num > 5 ))`\r\n"," `\\$num > 5`\r\n\r\n"],"correctAns":3},{"query":" Q48. Using Bash extended globbing, what will be the output of this command?","code":"bash\r\n$ ls -l\r\napple\r\nbanana\r\nbananapple\r\nbanapple\r\npineapple\r\nstrawberry\r\n$ shopt -s extglob\r\n$ ls -l @(ba*(na)|a+(p)le)\r\n","options":[" a\r\n\r\n```bash\r\napple\r\nbanana\r\n```\r\n\r\n"," b\r\n\r\n```bash\r\napple\r\nbanana\r\nbananapple\r\nbanapple\r\npineapple\r\nstrawberry\r\n```\r\n\r\n"," c\r\n\r\n```bash\r\napple\r\nbanana\r\nbananappple\r\nbanapple\r\npineapple\r\n```\r\n\r\n"," d\r\n\r\n```bash\r\napple\r\nbanana\r\nbananapple\r\nbanapple\r\npineapple\r\n```\r\n\r\n"],"correctAns":1},{"query":" Q49. When used from within a script, which variable contains the name of the script?","options":[" \\$0\r\n"," \\$# // number of positional parameters\r\n"," \\$\\$ // pid of the current shell\r\n"," \\$@ // array-like construct of all positional parameters\r\n\r\n"],"correctAns":1},{"query":" Q50. What does the + signify at the end of the 10-digit file permissions on data.txt?","code":"bash\r\nls -l\r\n-rwx------+ 1 user1 u1 0 Oct 1 10:00 data.txt\r\n","options":[" There is an SELinux security context\r\n"," The sticky bit is set and the file will stay in RAM for speed\r\n"," There is an access control list\r\n"," There is an extended attribute such as immutable set\r\n\r\n"],"correctAns":3},{"query":" Q51. In Bash, what does the comment below do?","code":"bash\r\ncd -\r\n","options":[" It moves you to the directory you were previously in.\r\n"," It moves you to your home folder (whatever your current working directory happens to be).\r\n"," It deletes the current directory\r\n"," It moves you one directory above your current working directory.\r\n\r\n"],"correctAns":1}]