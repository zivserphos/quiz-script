[{"query":" Q1. When rendering a partial in a view, how would you pass local variables for rendering?","options":[" `<%= render partial: \"nav\", selected: \"about\"}%>`\r\n"," `<%= render partial: \"nav\", local_variables: {selected: \"about\"} %>`\r\n"," `<%= render partial: \"nav\", locals: {selected: \"about\"}`\r\n\r\n"],"correctAns":3},{"query":" Q2. Within a Rails controller, which code will prevent the parent controller's before_action `:get_feature` from running?","options":[" `skip_before_action :get_feature`\r\n"," `skip :get_feature, except: []`\r\n"," `prevent_action :get_feature`\r\n"," `:redis_cache_store`\r\n\r\n"],"correctAns":1},{"query":" Q3. Which statement correctly describes a difference between the form helper methods `form_tag` and `form_for`?","options":[" The `form_tag` method is for basic forms, while the `form_for` method is for multipart forms that include file uploads.\r\n"," The `form_tag` method is for HTTP requests, while the `form_for` method is for AJAX requests.\r\n"," The `form_tag` method typically expects a URL as its first argument, while the `form_for` method typically expects a model object.\r\n"," The `form_tag` method is evaluated at runtime, while the `form_for` method is precompiled and cached.\r\n\r\n"],"correctAns":3},{"query":" Q4. What is `before_action` (formerly known as `before_filter`)?","options":[" A trigger that is executed before an alteration of an object's state\r\n"," A method that is executed before an ActiveRecord model is saved\r\n"," A callback that fires before an event is handled\r\n"," A method in a controller that is executed before the controller action method\r\n\r\n"],"correctAns":4},{"query":" Q5. Which module can you use to encapsulate a cohesive chunk of functionality into a mixin?","options":[" `ActiveSupport::Concern`\r\n"," `RailsHelper.CommonClass`\r\n"," `ActiveJob::Mixin`\r\n"," `ActiveSupport::Module`\r\n\r\n"],"correctAns":1},{"query":" Q6. In Rails, which code would you use to define a route that handles both the `PUT` and `PATCH` `REST HTTP` verbs?","options":[" `put :items, include: patch`\r\n"," `put 'items', to: 'items#update'`\r\n"," `match 'items', to 'items#update', via: [:put, :patch]`\r\n"," `match :items, using: put && patch`\r\n\r\n"],"correctAns":3},{"query":" Q7. Which choice includes standard REST HTTP verbs?","options":[" GET, POST, PATCH, DELETE\r\n"," REDIRECT, RENDER, SESSION, COOKIE\r\n"," INDEX, SHOW, NEW, CREATE, EDIT, UPDATE, DESTROY\r\n"," CREATE, READ, UPDATE, DELETE\r\n\r\n"],"correctAns":1},{"query":" Q8. Which ActiveRecord query prevents SQL injection?","options":[" `Product.where(\"name = #{@keyword}\")`\r\n"," `Product.where(\"name = \" << @keyword}`\r\n"," `Product.where(\"name = ?\", @keyword`\r\n"," `Product.where(\"name = \" + h(@keyword)`\r\n\r\n"],"correctAns":3},{"query":" Q9. Given this code, which statement about the database table \"documents\" could be expected to be _true_?","code":"rb\r\nclass Document < ActiveRecord::Base\r\n  belongs_to :documentable, polymorphic: true\r\nend\r\n\r\nclass Product < ActiveRecord::Base\r\n  has_many :documents, as: :documentable\r\nend\r\n\r\nclass Service < ActiveRecord::Base\r\n  has_many :documents, as: :documentable\r\nend\r\n","options":[" It would include a column for `:type`.\r\n"," It would include columns for `:documentable_id` and `:documentable_type`.\r\n"," It would include columns for `:documentable` and `:type`.\r\n"," It would include a column for `:polymorphic_type`.\r\n\r\n"],"correctAns":2},{"query":" Q10. Are instance variables set within a controller method accessible within a view?","options":[" Yes, any instance variables that are set in an action method on a controller can be accessed and displayed in a view.\r\n"," Yes, instance variables set within an action method are accessible within a view, but only when render is explicitly called inside the action method.\r\n"," No, instance variables in a controller are private and are not accessible.\r\n"," No, instance variables can never be set in a controller action method.\r\n\r\n"],"correctAns":1},{"query":" Q11. When a validation of a field in a Rails model fails, where are the messages for validation errors stored?","options":[" `my_model.errors[:field]`\r\n"," `my_model.get_errors_for(:field)`\r\n"," `my_model.field.error`\r\n"," `my_model.all_errors.select(:field)`\r\n\r\n"],"correctAns":1},{"query":" Q12. If a database table of users contains the following rows, and `id` is the primary key, which statement would return only an object whose `last_name` is \"Cordero\"?","code":"\r\n-------------------------------\r\n\r\n| id | first_name | last_name |\r\n|----|------------|-----------|\r\n| 1  | Alice      | Anderson  |\r\n| 2  | Bob        | Buckner   |\r\n| 3  | Carrie     | Cordero   |\r\n| 4  | Devon      | Dupre     |\r\n| 5  | Carrie     | Eastman   |\r\n\r\n-------------------------------\r\n","options":[" `User.where(first_name: \"Carrie\")`\r\n"," `User.not.where(id: [1, 2, 4, 5])`\r\n"," `User.find_by(first_name: \"Cordero\")`\r\n"," `User.find(3)`\r\n\r\n"],"correctAns":4},{"query":" Q13. How would you generate a drop-down menu that allows the user to select from a collection of product names?","options":[" `<%= select_tag(@products) %>`\r\n"," `<%= collection_select(@products) %>`\r\n"," `<select name=\"product_id\"> <%= @products.each do |product| %> <option value=\"<%= product.id %>\"/> <% end %></select>`\r\n"," `<%= collection_select(:product, :product_id, Product.all, :id, :name) %>`\r\n\r\n"],"correctAns":4},{"query":" Q14. For a Rails validator, how would you define an error message for the model attribute `address` with the message \"This address is invalid\"?","options":[" `model.errors = This address is invalid`\r\n"," `errors(model, :address) << \"This address is invalid\"`\r\n"," `display_error_for(model, :address, \"This address is invalid\")`\r\n"," `model.errors[:address] << \"This address is invalid\"` "],"correctAns":4},{"query":" Q15. Given the URL helper `product_path(@product)`, which statement would be expected to be _false_?","options":[" If sent using the PATCH HTTP method, the URL could be used to update a product in the database.\r\n"," If sent using the POST HTTP method, the URL would create a new product in the database.\r\n"," If sent using the GET HTTP method, the URL would execute the show action in ProductsController.\r\n"," If sent using the DELETE HTTP method, the URL would call the destroy action by default.\r\n\r\n"],"correctAns":2},{"query":" Q16. Given this code, which choice would be expected to be a _true_ statement if the user requests the index action?","code":"rb\r\nclass DocumentsController < ApplicationController\r\n  before_action :require_login\r\n  def index\r\n    @documents = Document.visible.sorted\r\n  end\r\nend\r\n","options":[" The user's documents will be loaded.\r\n"," The index action will run normally because `:index` is not listed as an argument to `before_action`.\r\n"," The `require_login` method will automatically log in the user before running the index action.\r\n"," The index action will not be run if the `require_login` method calls render or `redirect_to`.\r\n\r\n"],"correctAns":4},{"query":" Q17. In Rails, how would you cache a partial template that is rendered?","options":[" `render partial: ‘shared/menu’, cached: true`\r\n"," `render_with_cache partial: ‘shared/menu’`\r\n"," `render partial: ‘shared/menu’`\r\n"," `render partial: ‘shared/menu’, cached_with_variables: {}`\r\n\r\n"],"correctAns":1},{"query":" Q18. What is the reason for using Concerns in Rails?","options":[" Concerns allow modularity and code reuse in models, controllers, and other classes.\r\n"," Concerns are used to separate class methods from models.\r\n"," Concerns are used to increase security of Rails applications.\r\n"," Concerns are used to refactor Rails views.\r\n\r\n"],"correctAns":1},{"query":" Q19. When using an ActiveRecord model, which method will create the model instance in memory and save it to the database?","options":[" `build`\r\n"," `new`\r\n"," `create` [Reference](https://medium.com/@de.usmanusa/difference-between-create-new-and-save-methods-in-activerecord-ea135085a08c)\r\n"," `save`\r\n\r\n"],"correctAns":3},{"query":" Q20. You are using an existing database that has a table named `coffee_orders`. What would the ActiveRecord model be named in order to use that table?","options":[" `CoffeeOrders`\r\n"," `Coffee_Orders`\r\n"," `Coffee_Order`\r\n"," `CoffeeOrder` "],"correctAns":4},{"query":" Q21. In ActiveRecord, what is the difference between the `has_many` and `has_many :through` associations?","options":[" The `has_many: through` association is the one-to-many equivalent to the `belongs_to` one-to-one association.\r\n"," Both associations are identical, and `has_many: through` is maintained only for legacy purposes.\r\n"," The `has_many` association is a one-to-many association, while `has_many: through` is a one-to-one association that matches through a third model.\r\n"," Both are one-to-many associations but with `has_many :through`, the declaring model can associate through a third model.\r\n\r\n"],"correctAns":4},{"query":" Q22. How do you add Ruby code inside Rails views and have its result outputted in the HTML file?","options":[" Create an embedded Ruby file (.html.erb) and surround the Ruby code with `<% %>`.\r\n"," Insert Ruby code inside standard HTML files and surround it with `<% %>`. The web server will handle the rest.\r\n"," Create an embedded Ruby file (.html.erb) and surround the Ruby code with `<%= %>`.\r\n"," Put the code in an .rb file and include it in a `<link>` tag of an HTML file.\r\n\r\n"],"correctAns":1},{"query":" Q23. How would you render a view using a different layout in an ERB HTML view?","options":[" `<% render 'view_mobile' %>`\r\n"," `<% render 'view', use_layout: 'mobile' %>`\r\n"," `<% render 'view', layout: 'mobile' %>` [Reference](https://stackoverflow.com/a/19277971)\r\n"," `<% render_with_layout 'view', 'mobile' %>`\r\n\r\n"],"correctAns":3},{"query":" Q24. Given this controller code, which choice describes the expected behavior if parameters are submitted to the update action that includes values for the product's name, style, color, and price?","code":"rb\r\nclass ProductController < ActionController::Base\r\n\r\n  def update\r\n    @product = Product.find(params[:id])\r\n    if @product.update_attributes(product_params)\r\n      redirect_to(product_path(@product))\r\n    else\r\n      render('edit')\r\n    end\r\n  end\r\n\r\n  private\r\n\r\n  def product_params\r\n    params.require(:product).permit(:name, :style, :color)\r\n  end\r\nend\r\n","options":[" The product will not be updated and the edit template will be rendered.\r\n"," The product will not be updated and the controller will raise an ActiveModel::ForbiddenAttributes exception.\r\n"," The product will be updated with the values for name, style, and color, but the value for price will be ignored.\r\n"," The product will be updated with the values for name, style, color, and price.\r\n\r\n"],"correctAns":2},{"query":" Q25. A Rails project has ActiveRecord classes defined for Classroom and Student. If instances of these classes are related so that students are assigned the ID of one particular classroom, which choice shows the correct associations to define?","code":null,"options":[" A\r\n\r\n```rb\r\nclass Classroom < ActiveRecord::Base\r\n  belongs_to :students, class_name: 'Student'\r\nend\r\n\r\nclass Student < ActiveRecord::Base\r\n  belongs_to :classrooms, class_name: 'Classroom'\r\nend\r\n```\r\n\r\n"," B\r\n\r\n```rb\r\nclass Student < ActiveRecord::Base\r\n  has_many :classrooms, dependent: true\r\nend\r\n\r\nclass Classroom < ActiveRecord::Base\r\n  has_many :students, dependent: false\r\nend\r\n```\r\n\r\n"," C\r\n\r\n```rb\r\nclass Student < ActiveRecord::Base\r\n  has_many :classrooms\r\nend\r\n\r\nclass Classroom < ActiveRecord::Base\r\n  belongs_to :student\r\nend\r\n```\r\n\r\n"," D\r\n\r\n```rb\r\nclass Classroom < ActiveRecord::Base\r\n  has_many :students\r\nend\r\n\r\nclass Student < ActiveRecord::Base\r\n  belongs_to :classroom\r\nend\r\n```\r\n\r\n"],"correctAns":4}]