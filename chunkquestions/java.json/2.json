[{"query":" Q29. What is the output of this code?","code":"java\r\nclass Main {\r\n    public static void main(String[] args){\r\n       String message = \"Hello\";\r\n       for (int i = 0; i<message.length(); i++){\r\n          System.out.print(message.charAt(i+1));\r\n       }\r\n    }\r\n}\r\n","options":[" \"Hello\"\r\n"," A runtime exception is thrown.\r\n"," The code does not compile.\r\n"," \"ello\"\r\n\r\n"],"correctAns":2},{"query":" Q30. Object-oriented programming is a style of programming where you organize your program around \\_ rather than \\_ and data rather than logic.","options":[" functions; actions\r\n"," objects; actions\r\n"," actions; functions\r\n"," actions; objects\r\n\r\n"],"correctAns":2},{"query":" Q31. What statement returns true if \"nifty\" is of type String?","options":[" `\"nifty\".getType().equals(\"String\")`\r\n"," `\"nifty\".getType() == String`\r\n"," `\"nifty\".getClass().getSimpleName() == \"String\"`\r\n"," `\"nifty\" instanceof String`\r\n\r\n"],"correctAns":4},{"query":" Q32. What is the output of this code?","code":"java\r\nimport java.util.*;\r\nclass Main {\r\n\tpublic static void main(String[] args) {\r\n\t\tList<Boolean> list = new ArrayList<>();\r\n\t\tlist.add(true);\r\n\t\tlist.add(Boolean.parseBoolean(\"FalSe\"));\r\n\t\tlist.add(Boolean.TRUE);\r\n\t\tSystem.out.print(list.size());\r\n\t\tSystem.out.print(list.get(1) instanceof Boolean);\r\n\t}\r\n}\r\n","options":[" A runtime exception is thrown.\r\n"," 3false\r\n"," 2true\r\n"," 3true\r\n\r\n"],"correctAns":4},{"query":" Q33. What is the result of this code?","code":"java\r\n1: class Main {\r\n2: \tObject message(){\r\n3: \t\treturn \"Hello!\";\r\n4: \t}\r\n5: \tpublic static void main(String[] args) {\r\n6: \t\tSystem.out.print(new Main().message());\r\n7: \t\tSystem.out.print(new Main2().message());\r\n8: \t}\r\n9: }\r\n10: class Main2 extends Main {\r\n11: \tString message(){\r\n12: \t\treturn \"World!\";\r\n13: \t}\r\n14: }\r\n","options":[" It will not compile because of line 7.\r\n"," Hello!Hello!\r\n"," Hello!World!\r\n"," It will not compile because of line 11.\r\n\r\n"],"correctAns":3},{"query":" Q34. What method can be used to create a new instance of an object?","options":[" another instance\r\n"," field\r\n"," constructor\r\n"," private method\r\n\r\n"],"correctAns":3},{"query":" Q35. Which is the most reliable expression for testing whether the values of two string variables are the same?","options":[" string1 == string2\r\n"," string1 = string2\r\n"," string1.matches(string2)\r\n"," string1.equals(string2)\r\n\r\n"],"correctAns":4},{"query":" Q36. Which letters will print when this code is run?","code":"java\r\npublic static void main(String[] args) {\r\n\ttry {\r\n\t\tSystem.out.println(\"A\");\r\n\t\tbadMethod();\r\n\t\tSystem.out.println(\"B\");\r\n\t} catch (Exception ex) {\r\n\t\tSystem.out.println(\"C\");\r\n\t} finally {\r\n\t\tSystem.out.println(\"D\");\r\n\t}\r\n}\r\npublic static void badMethod() {\r\n\tthrow new Error();\r\n}\r\n","options":[" A, B, and D\r\n"," A, C, and D\r\n"," C and D\r\n"," A and D\r\n\r\n**Explanation**: `Error` is not inherited from `Exception`\r\n\r\n"],"correctAns":4},{"query":" Q37. What is the output of this code?","code":"java\r\nclass Main {\r\n\tstatic int count = 0;\r\n\tpublic static void main(String[] args) {\r\n\t\tif (count < 3) {\r\n\t\t\tcount++;\r\n\t\t\tmain(null);\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tSystem.out.println(\"Hello World!\");\r\n\t}\r\n}\r\n","options":[" It will throw a runtime exception.\r\n"," It will not compile.\r\n"," It will print \"Hello World!\" three times.\r\n"," It will run forever.\r\n\r\n"],"correctAns":3},{"query":" Q38. What is the output of this code?","code":"java\r\nimport java.util.*;\r\nclass Main {\r\n\tpublic static void main(String[] args) {\r\n\t\tString[] array = {\"abc\", \"2\", \"10\", \"0\"};\r\n\t\tList<String> list = Arrays.asList(array);\r\n\t\tCollections.sort(list);\r\n\t\tSystem.out.println(Arrays.toString(array));\r\n\t}\r\n}\r\n","options":[" [abc, 0, 2, 10]\r\n"," The code does not compile.\r\n"," [abc, 2, 10, 0]\r\n"," [0, 10, 2, abc]\r\n\r\n**Explanation**: The `java.util.Arrays.asList(T... a)` returns a fixed-size list backed by the specified array. (Changes to the returned list \"write through\" to the array.)\r\n\r\n"],"correctAns":4},{"query":" Q39. What is the output of this code?","code":"java\r\nclass Main {\r\n\tpublic static void main(String[] args) {\r\n\t\tString message = \"Hello\";\r\n\t\tprint(message);\r\n\t\tmessage += \"World!\";\r\n\t\tprint(message);\r\n\t}\r\n\tstatic void print(String message){\r\n\t\tSystem.out.print(message);\r\n\t\tmessage += \" \";\r\n\t}\r\n}\r\n","options":[" Hello World!\r\n"," HelloHelloWorld!\r\n"," Hello Hello World!\r\n"," Hello HelloWorld!\r\n\r\n"],"correctAns":2},{"query":" Q40. What is displayed when this code is compiled and executed?","code":"java\r\npublic class Main {\r\n\tpublic static void main(String[] args) {\r\n\t\tint x = 5;\r\n\t\tx = 10;\r\n\t\tSystem.out.println(x);\r\n\t}\r\n}\r\n","options":[" x\r\n"," null\r\n"," 10\r\n"," 5\r\n\r\n"],"correctAns":3},{"query":" Q41. Which approach cannot be used to iterate over a List named _theList_?","code":null,"options":[" A\r\n\r\n```java\r\nfor (int i = 0; i < theList.size(); i++) {\r\n    System.out.println(theList.get(i));\r\n}\r\n```\r\n\r\n"," B\r\n\r\n```java\r\nfor (Object object : theList) {\r\n    System.out.println(object);\r\n}\r\n```\r\n\r\n"," C\r\n\r\n```java\r\nIterator it = theList.iterator();\r\nfor (it.hasNext()) {\r\n    System.out.println(it.next());\r\n}\r\n```\r\n\r\n"," D\r\n\r\n```java\r\ntheList.forEach(System.out::println);\r\n```\r\n\r\n**Explanation:** `for (it.hasNext())` should be `while (it.hasNext())`.\r\n\r\n"],"correctAns":3},{"query":" Q42. What method signature will work with this code?","options":[" public void isHealthy(String avocado)\r\n"," boolean isHealthy(String string)\r\n"," public isHealthy(\"avocado\")\r\n"," private String isHealthy(String food)\r\n\r\n"],"correctAns":2},{"query":" Q43. Which are valid keywords in a Java module descriptor (module-info.java)?","options":[" provides, employs\r\n"," imports, exports\r\n"," consumes, supplies\r\n"," requires, exports\r\n\r\n"],"correctAns":4},{"query":" Q44. Which type of variable keeps a constant value once it is assigned?","options":[" non-static\r\n"," static\r\n"," final\r\n"," private\r\n\r\n"],"correctAns":3},{"query":" Q45. How does the keyword `volatile` affect how a variable is handled?","options":[" It will be read by only one thread at a time.\r\n"," It will be stored on the hard drive.\r\n"," It will never be cached by the CPU.\r\n"," It will be preferentially garbage collected.\r\n\r\n"],"correctAns":3},{"query":" Q46. What is the result of this code?","code":"java\r\nchar smooch = 'x';\r\nSystem.out.println((int) smooch);\r\n","options":[" an alphanumeric character\r\n"," a negative number\r\n"," a positive number\r\n"," a ClassCastException\r\n\r\n"],"correctAns":3},{"query":" Q47. You get a NullPointerException. What is the most likely cause?","options":[" A file that needs to be opened cannot be found.\r\n"," A network connection has been lost in the middle of communications.\r\n"," Your code has used up all available memory.\r\n"," The object you are using has not been instantiated.\r\n\r\n"],"correctAns":4},{"query":" Q48. How would you fix this code so that it compiles?","code":"java\r\npublic class Nosey {\r\n\tint age;\r\n\tpublic static void main(String[] args) {\r\n\t\tSystem.out.println(\"Your age is: \" + age);\r\n\t}\r\n}\r\n","options":[" Make age static.\r\n"," Make age global.\r\n"," Make age public.\r\n"," Initialize age to a number.\r\n\r\n"],"correctAns":1},{"query":" Q49. Add a Duck called \"Waddles\" to the ArrayList **ducks**.","code":"java\r\npublic class Duck {\r\n\tprivate String name;\r\n\tDuck(String name) {}\r\n}\r\n","options":[" `Duck waddles = new Duck();`\r\n      `ducks.add(waddles);`\r\n"," `Duck duck = new Duck(\"Waddles\");`\r\n      `ducks.add(waddles);`\r\n"," `ducks.add(new Duck(\"Waddles\"));`\r\n"," `ducks.add(new Waddles());`\r\n\r\n"],"correctAns":3},{"query":" Q50. If you encounter `UnsupportedClassVersionError` it means the code was `___` on a newer version of Java than the JRE `___` it.","options":[" executed; interpreting\r\n"," executed; compiling\r\n"," compiled; executing\r\n"," compiled, translating\r\n\r\n"],"correctAns":3},{"query":" Q51. Given this class, how would you make the code compile?","code":"java\r\npublic class TheClass {\r\n    private final int x;\r\n}\r\n","options":[" A\r\n\r\n```java\r\npublic TheClass() {\r\n    x += 77;\r\n}\r\n```\r\n\r\n"," B\r\n\r\n```java\r\npublic TheClass() {\r\n    x = null;\r\n}\r\n```\r\n\r\n"," C\r\n\r\n```java\r\npublic TheClass() {\r\n    x = 77;\r\n}\r\n```\r\n\r\n"," D\r\n\r\n```java\r\nprivate void setX(int x) {\r\n    this.x = x;\r\n}\r\npublic TheClass() {\r\n    setX(77);\r\n}\r\n```\r\n\r\n**Explanation:** `final` class members are allowed to be assigned only in three places: declaration, constructor or an instance-initializer block.\r\n\r\n"],"correctAns":3},{"query":" Q52. How many times f will be printed?","code":"java\r\npublic class Solution {\r\n    public static void main(String[] args) {\r\n        for (int i = 44; i > 40; i--) {\r\n            System.out.println(\"f\");\r\n        }\r\n    }\r\n}\r\n","options":[" 4\r\n"," 3\r\n"," 5\r\n"," A Runtime exception will be thrown\r\n\r\n"],"correctAns":1},{"query":" Q53. Which statements about `abstract` classes are true?","code":"\r\n1. They can be instantiated.\r\n2. They allow member variables and methods to be inherited by subclasses.\r\n3. They can contain constructors.\r\n","options":[" 1, 2, and 3\r\n"," only 3\r\n"," 2 and 3\r\n"," only 2\r\n\r\n"],"correctAns":3}]