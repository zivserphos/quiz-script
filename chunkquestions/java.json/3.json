[{"query":" Q54. Which keyword lets you call the constructor of a parent class?","options":[" parent\r\n"," super\r\n"," this\r\n"," new\r\n\r\n"],"correctAns":2},{"query":" Q55. What is the result of this code?","code":"java\r\n  1: int a = 1;\r\n  2: int b = 0;\r\n  3: int c = a/b;\r\n  4: System.out.println(c);\r\n","options":[" It will throw an ArithmeticException.\r\n"," It will run and output 0.\r\n"," It will not compile because of line 3.\r\n"," It will run and output infinity.\r\n\r\n"],"correctAns":1},{"query":" Q56. Normally, to access a static member of a class such as Math.PI, you would need to specify the class \"Math\". What would be the best way to allow you to use simply \"PI\" in your code?","options":[" Add a static import.\r\n"," Declare local copies of the constant in your code.\r\n"," This cannot be done. You must always qualify references to static members with the class form which they came from.\r\n"," Put the static members in an interface and inherit from that interface.\r\n\r\n"],"correctAns":1},{"query":" Q57. Which keyword lets you use an interface?","options":[" extends\r\n"," implements\r\n"," inherits\r\n"," import\r\n\r\n"],"correctAns":2},{"query":" Q58. Why are ArrayLists better than arrays?","options":[" You don't have to decide the size of an ArrayList when you first make it.\r\n"," You can put more items into an ArrayList than into an array.\r\n"," ArrayLists can hold more kinds of objects than arrays.\r\n"," You don't have to decide the type of an ArrayList when you first make it.\r\n\r\n"],"correctAns":1},{"query":" Q60. Use the magic power to cast a spell","code":"java\r\npublic class MagicPower {\r\n    void castSpell(String spell) {}\r\n}\r\n","options":[" `new MagicPower().castSpell(\"expecto patronum\")`\r\n"," `MagicPower magicPower = new MagicPower();`\r\n      `magicPower.castSpell();`\r\n"," `MagicPower.castSpell(\"expelliarmus\");`\r\n"," `new MagicPower.castSpell();`\r\n\r\n"],"correctAns":1},{"query":" Q61. What language construct serves as a blueprint containing an object's properties and functionality?","options":[" constructor\r\n"," instance\r\n"," class\r\n"," method\r\n\r\n"],"correctAns":3},{"query":" Q62. What does this code print?","code":"java\r\npublic static void main(String[] args) {\r\n    int x=5,y=10;\r\n    swapsies(x,y);\r\n    System.out.println(x+\" \"+y);\r\n}\r\n\r\nstatic void swapsies(int a, int b) {\r\n    int temp=a;\r\n    a=b;\r\n    b=temp;\r\n}\r\n","options":[" 10 10\r\n"," 5 10\r\n"," 10 5\r\n"," 5 5\r\n\r\n"],"correctAns":2},{"query":" Q63. What is the result of this code?","code":"java\r\ntry {\r\n    System.out.println(\"Hello World\");\r\n} catch (Exception e) {\r\n    System.out.println(\"e\");\r\n} catch (ArithmeticException e) {\r\n    System.out.println(\"e\");\r\n} finally {\r\n    System.out.println(\"!\");\r\n}\r\n","options":[" Hello World\r\n"," It will not compile because the second catch statement is unreachable\r\n"," Hello World!\r\n"," It will throw runtime exception\r\n\r\n"],"correctAns":2},{"query":" Q64. Which is not a java keyword","options":[" finally\r\n"," native\r\n"," interface\r\n"," unsigned\r\n\r\n**Explanation:** `native` is a part of JNI interface\r\n\r\n"],"correctAns":4},{"query":" Q65. Which operator would you use to find the remainder after division?","options":[" `%`\r\n"," `//`\r\n"," `/`\r\n"," `DIV`\r\n\r\n"],"correctAns":1},{"query":" Q66. Which choice is a disadvantage of inheritance?","options":[" Overridden methods of the parent class cannot be reused.\r\n"," Responsibilities are not evenly distributed between parent and child classes.\r\n"," Classes related by inheritance are tightly coupled to each other.\r\n"," The internal state of the parent class is accessible to its children.\r\n\r\n"],"correctAns":3},{"query":" Q67. Declare and initialize an array of 10 ints.","options":[" `Array<Integer> numbers = new Array<Integer>(10);`\r\n"," `Array[int] numbers = new Array[int](10);`\r\n"," `int[] numbers = new int[10];`\r\n"," `int numbers[] = int[10];`\r\n\r\n"],"correctAns":3},{"query":" Q68. Refactor this event handler to a lambda expression:","code":"java\r\ngroucyButton.addActionListener(new ActionListener() {\r\n    @Override\r\n    public void actionPerformed(ActionEvent e) {\r\n        System.out.println(\"Press me one more time..\");\r\n    }\r\n});\r\n","options":[" `groucyButton.addActionListener(ActionListener listener -> System.out.println(\"Press me one more time...\"));`\r\n"," `groucyButton.addActionListener((event) -> System.out.println(\"Press me one more time...\"));`\r\n"," `groucyButton.addActionListener(new ActionListener(ActionEvent e) {() -> System.out.println(\"Press me one more time...\");});`\r\n"," `groucyButton.addActionListener(() -> System.out.println(\"Press me one more time...\"));`\r\n\r\n"],"correctAns":2},{"query":" Q69. Which functional interfaces does Java provide to serve as data types for lambda expressions?","options":[" Observer, Observable\r\n"," Collector, Builder\r\n"," Filter, Map, Reduce\r\n"," Consumer, Predicate, Supplier\r\n\r\n"],"correctAns":4},{"query":" Q69. What is a valid use of the hashCode() method?","options":[" encrypting user passwords\r\n"," deciding if two instances of a class are equal\r\n"," enabling HashMap to find matches faster\r\n"," moving objects from a List to a HashMap\r\n\r\n"],"correctAns":2},{"query":" Q70. What kind of relationship does \"extends\" denote?","options":[" uses-a\r\n"," is-a\r\n"," has-a\r\n"," was-a\r\n\r\n"],"correctAns":2},{"query":" Q71. How do you force an object to be garbage collected?","options":[" Set object to null and call Runtime.gc()\r\n"," Set object to null and call System.gc()\r\n"," Set object to null and call Runtime.getRuntime().runFinalization()\r\n"," There is no way to force an object to be garbage collected\r\n\r\n"],"correctAns":2},{"query":" Q72. Java programmers commonly use design patterns. Some examples are the **\\_**, which helps create instances of a class, the **\\_**, which ensures that only one instance of a class can be created; and the **\\_**, which allows for a group of algorithms to be interchangeable.","options":[" static factory method; singleton; strategy pattern\r\n"," strategy pattern; static factory method; singleton\r\n"," creation pattern; singleton; prototype pattern\r\n"," singleton; strategy pattern; static factory method\r\n\r\n"],"correctAns":1},{"query":" Q73. Using Java's Reflection API, you can use \\_ to get the name of a class and \\_ to retrieve an array of its methods.","options":[" this.getClass().getSimpleName(); this.getClass().getDeclaredMethods()\r\n"," this.getName(); this.getMethods()\r\n"," Reflection.getName(this); Reflection.getMethods(this)\r\n"," Reflection.getClass(this).getName(); Reflection.getClass(this).getMethods()\r\n\r\n"],"correctAns":1},{"query":" Q74. Which is not a valid lambda expression?","options":[" `a -> false;`\r\n"," `(a) -> false;`\r\n"," `String a -> false;`\r\n"," `(String a) -> false;`\r\n\r\n"],"correctAns":3},{"query":" Q75. Which access modifier makes variables and methods visible only in the class where they are declared?","options":[" public\r\n"," protected\r\n"," nonmodifier\r\n"," private\r\n\r\n"],"correctAns":4},{"query":" Q76. What type of variable can be assigned to only once?","options":[" private\r\n"," non-static\r\n"," final\r\n"," static\r\n\r\n"],"correctAns":3},{"query":" Q77. How would you convert a String to an Int?","options":[" `\"21\".intValue()`\r\n"," `String.toInt(\"21\")`\r\n"," `Integer.parseInt(\"21\")`\r\n"," `String.valueOf(\"21\")`\r\n\r\n"],"correctAns":3},{"query":" Q78. What method should be added to the Duck class to print the name Moby?","code":"java\r\npublic class Duck {\r\n    private String name;\r\n\r\n    Duck(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        System.out.println(new Duck(\"Moby\"));\r\n    }\r\n}\r\n","options":[" `public String toString() { return name; } `\r\n"," `public void println() { System.out.println(name); } `\r\n"," `String toString() { return this.name; } `\r\n"," `public void toString() { System.out.println(this.name); } `\r\n\r\n"],"correctAns":1}]