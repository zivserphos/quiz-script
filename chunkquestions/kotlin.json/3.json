[{"query":" Q51. You have created a data class, Point, that holds two properties, x and y, representing a point on a grid. You want to use the hash symbol for subtraction on the Point class, but the code as shown will not compile. How can you fix it?","code":"kotlin\r\ndata class Point(val x: Int, val y: Int)\r\n\r\noperator fun Point.plus(other: Point) = Point(x + other.x, y + other.y)\r\noperator fun Point.hash(other: Point) = Point(x - other.x, y - other.y)\r\n\r\nfun main() {\r\n    val point1 = Point(10, 20)\r\n    val point2 = Point(20, 30)\r\n    println(point1 + point2)\r\n    println(point1 # point2)\r\n}\r\n","options":[" You cannot; the hash symbol is not a valid operator.\r\n"," You should replace the word hash with octothorpe, the actual name for the symbol.\r\n"," You should use `minus` instead of hash, then type alias the minus symbol. // Note: How can you fix it?\r\n"," You need to replace operator with the word `infix`.\r\n\r\n"],"correctAns":3},{"query":" Q52. This code snippet compiles without error, but never prints the results when executed. What could be wrong?","code":"kotlin\r\nval result = generateSequence(1) { it + 1 }.toList()\r\nprintln(result)\r\n","options":[" The sequence lacks a terminal operation. ([reference](https://kotlinlang.org/docs/sequences.html#iterable))\r\n"," The sequence is infinite and lacks an intermediate operation to make `it` finite.\r\n"," The expression should begin with `generateSequence(0)`.\r\n"," The `it` parameter should be replaced with `this`.\r\n\r\n"],"correctAns":1},{"query":" Q53. An error is generated when you try to compile the following code. How should you change the call to printStudents to fix the error?","code":"kotlin\r\nfun main() {\r\n    val students = arrayOf(\"Abel\", \"Bill\", \"Cindy\", \"Darla\")\r\n    printStudents(students)\r\n}\r\n\r\nfun printStudents(vararg students: String) {\r\n    for(student in students) println(student)\r\n}\r\n","options":[" `printStudents(students.toList())`\r\n"," `printStudents(students!!)`\r\n"," `printStudents(*students)`\r\n"," `printStudents(students[])`\r\n\r\n"],"correctAns":3},{"query":" Q54. Both y and z are immutable references pointing to fixed-size collections of the same four integers. Are there any differences?","code":"kotlin\r\nval y = arrayOf(10, 20, 30, 40)\r\nval z = listOf(10, 20, 30, 40)\r\n","options":[" You can modify the contents of the elements in `y` but not `z`.\r\n"," There are not any differences. `y` and `z` are a type alias of the same type.\r\n"," You add more elements to `z` since it is a list.\r\n"," You can modify the contents of the elements in `z` but not `y`.\r\n\r\n"],"correctAns":1},{"query":" Q55. The code snippet compile and runs without issue, but does not wait for the coroutine to show the \"there\" message. Which line of code will cause the code to wait for the coroutine to finish before exiting?","code":"kotlin\r\nfun main() = runBlocking {\r\n    val task = GlobalScope.launch {\r\n        delay(1000L)\r\n        println(\"there\")\r\n    }\r\n    println(\"Hello,\")\r\n}\r\n","options":[" `task.complete()`\r\n"," `task.wait()`\r\n"," `task.join()`\r\n"," `task.cancel()`\r\n\r\n"],"correctAns":3},{"query":" Q56. You would like to group a list of students by last name and get the total number of groups. Which line of code accomplishes this, assuming you have a list of the Student data class?","code":"kotlin\r\ndata class Student(val firstName: String, val lastName: String)\r\n","options":[" `println(students.groupBy{ it.lastName }.count())`\r\n"," `println(students.groupBy{ it.lastName.first() }.fold().count())`\r\n"," `println(students.groupingBy{ it.lastName.first() }.count())`\r\n"," `println(students.groupingBy{ it.lastName.first() }.size())`\r\n\r\n"],"correctAns":1},{"query":" Q57. Class BB inherits from class AA. BB uses a different method to calculate the price. As shown, the code does not compile. What changes is needed to resolve the compilation error?","code":"kotlin\r\nopen class AA() {\r\n     var price: Int = 0\r\n        get() = field + 10\r\n}\r\nclass BB() : AA() {\r\n     var price: Int = 0\r\n        get() = field + 20\r\n}\r\n","options":[" You need to add a lateinit modifier to `AA.price`.\r\n"," You simply need to add an override modifier to `BB.price`.\r\n"," You need to add an open modifier to `AA.price` and an override modifier to `BB.price`.\r\n"," You need to add a public modifier to `AA.price` and a protected modifier to `BB.price`.\r\n\r\n"],"correctAns":3},{"query":" Q58. What is the output of this code?","code":"kotlin\r\nval quote = \"The eagle has landed.\"\r\nprintln(\"The length of the quote is $quote.length\")\r\n","options":[" The length of the quote is The eagle has landed.\r\n"," A compilation error is displayed.\r\n"," The length of the quote is `21`\r\n"," The length of the quote is `The eagle has landed..length`\r\n\r\n"],"correctAns":4},{"query":" Q59. You have an unordered list of high scores. Which is the simple method to sort the highScores in descending order?","code":"kotlin\r\nfun main() {\r\n    val highScores = listOf(4000, 2000, 10200, 12000, 9030)\r\n","options":[" `.sortedByDescending()`\r\n"," `.descending()`\r\n"," `.sortedDescending()`\r\n"," `.sort(\"DESC\")`\r\n\r\n"],"correctAns":3},{"query":" Q60. Your class has a property name that gets assigned later. You do not want it to be a nullable type. Using a delegate, how should you declare it?","options":[" `lateinit var name: String` // lateinit is modifier not delegate\r\n"," `var name: String by lazy`\r\n"," `var name: String by Delegates.notNull()`\r\n"," `var name: String? = null`\r\n\r\n"],"correctAns":3},{"query":" Q61. You want to know each time a class property is updated. If the new value is not within range, you want to stop the update. Which code snippet shows a built-in delegated property that can accomplish this?","options":[" `Delegates.vetoable()`\r\n"," `Delegates.cancellable()`\r\n"," `Delegates.observer()`\r\n"," `Delegates.watcher()`\r\n\r\n"],"correctAns":1},{"query":" Q62. Which line of code shows how to call a Fibonacci function, bypass the first three elements, grab the next six, and sort the elements in descending order?","options":[" `val sorted = fibonacci().skip(3).take(6).sortedDescending().toList()`\r\n"," `val sorted = fibonacci().skip(3).take(6).sortedByDescending().toList()`\r\n"," `val sorted = fibonacci().skip(3).limit(6).sortedByDescending().toList()`\r\n"," `val sorted = fibonacci().drop(3).take(6).sortedDescending().toList()` ([reference](https://kotlinlang.org/docs/collection-parts.html#take-and-drop))\r\n\r\n"],"correctAns":4},{"query":" Q63. You have two arrays, a and b. Which line combines a and b as a list containing the contents of both?","code":"kotlin\r\nval a = arrayOf(1, 2, 3)\r\nval b = arrayOf(100, 200, 3000)\r\n","options":[" `val c = list of (a, b)`\r\n"," `val c = a + b`\r\n"," `val c = listOf(a+b)`\r\n"," `val c = listOf(*a, *b)` ([reference](https://www.techiedelight.com/join-two-lists-kotlin/)) (Similar to Q72)\r\n\r\n"],"correctAns":4},{"query":" Q64. This code is occasionally throwing a null pointer exception (NPE). How can you change the code so it never throws as NPE?","code":"kotlin\r\nprintln(\"length of First Name = ${firstName!!.length}\")\r\n","options":[" Replace `!!.` with `?.` ([reference](https://kotlinlang.org/docs/null-safety.html#nullable-types-and-non-null-types))\r\n"," Replace `!!.` with `?:.`\r\n"," Surround the line with a try/catch block.\r\n"," Replace `!!.` with `?.let`.\r\n\r\n"],"correctAns":1},{"query":" Q65. What is the execution order of init blocks and properties during initialization?","options":[" All of the properties are executed in order of appearance, and then the init blocks are executed.\r\n"," The init blocks and properties are executed in the same order they appear in the code. ([reference](https://kotlinlang.org/docs/classes.html#constructors))\r\n"," All of the init blocks are executed in order of appearance, and then the properties are executed.\r\n"," The order of execution is not guaranteed, so code should be written accordingly.\r\n\r\n"],"correctAns":2},{"query":" Q66. Both const and @JvmField create constants. What can @JvmField do that const cannot?","code":"kotlin\r\nclass Styles {\r\n  companion object {\r\n    const val COLOR = \"Blue\"\r\n      @JvmField val SIZE = \"Really big\"\r\n   }\r\n}\r\n","options":[" `const` works only with strings and primitives. `@JvmField` does not have that restriction. ([reference](https://github.com/ythy/blog/issues/328))\r\n"," `@JvmField` works as a top-level variable, but `const` works only in a class.\r\n"," `@JvmField` is compatible with Java, but `const` is not.\r\n"," `@JvmField` is always inlined for faster code.\r\n\r\n"],"correctAns":1},{"query":" Q67. What are the two ways to make a coroutine's computation code cancellable? ([reference](https://kotlinlang.org/docs/cancellation-and-timeouts.html","options":[" Call the `yield()` function or check the `isActive` property.\r\n"," Call the `cancelled()` function or check the `isActive` property.\r\n"," Call the `stillActive()` function or check the `isCancelled` property.\r\n"," Call the `checkCancelled()` function or check the `isCancelled` property.\r\n\r\n"],"correctAns":1},{"query":" Q68. Given the code below, how can you write the line this.moveTo(\"LA\") more concisely?","code":"kotlin\r\ndata class Student (val name: String, var location: String) {\r\n  fun moveTo (newLoc: String) { location = newLoc }\r\n\r\n}\r\n\r\nfun main() {\r\n\r\n  Student (\"Snow\", \"Cologne\").run {\r\n\r\n  this.moveTo (\"LA\")\r\n\r\n}\r\n","options":[" `moveTo( \"LA\")`\r\n"," `::moveTo(\"LA\")`\r\n"," `moveTo(\"LA\")`\r\n"," `it.moveTo(\"LA\")`\r\n\r\n"],"correctAns":3},{"query":" Q69. For the Product class you are designing, you would like the price to be readable by anyone, but changeable only from within the class. Which property declaration implements your design?","code":null,"options":[" Option 1\r\n\r\n```\r\nvar price: Int = 0\r\n  public get()\r\n  private set\r\n```\r\n\r\n"," Option 2 ([reference](https://kotlinlang.org/docs/properties.html#getters-and-setters))\r\n\r\n```\r\nvar price: Int = 0\r\n  private set\r\n```\r\n\r\n"," Option 3\r\n\r\n```\r\nvar price: Int = 0\r\n  val set\r\n```\r\n\r\n"," Option 4\r\n\r\n```\r\nval price: Int=0\r\n```\r\n\r\n"],"correctAns":2},{"query":" Q70. What will happen when you try to build and run this code snippet?","code":"kotlin\r\nclass SpecialFunction : () -> Unit {\r\n  override fun invoke() {\r\n    println(\"Invoked from an instance.\")\r\n  }\r\n}\r\nfun main() {\r\n  try { SpecialFunction()() }\r\n  catch (ex: Exception) { println(\"An error occurred\") }\r\n}\r\n","options":[" A syntax error occurs due to the line `SpecialFunction()()`.\r\n"," The message \"An Error occurred\" is displayed.\r\n"," The message \"Invoked from an instance.\" is displayed. // the second \"()\" is equals to .invoke()\r\n"," A compile error occurs. You cannot override the `invoke()` method.\r\n\r\n"],"correctAns":3},{"query":" Q71. Which statement declares a variable mileage whose value never changes and is inferred to be an integer?","options":[" `val mileage:Int = 566`\r\n"," `var mileage:Int = 566`\r\n"," `val mileage = 566` (Note: inferred)\r\n"," `const int mileage = 566`\r\n\r\n"],"correctAns":3},{"query":" Q72. You have two arrays, a and b. Which line combines a and b as a list containing the contents of both?","code":"kotlin\r\nval a = array0f(1, 2, 3)\r\nval b = array0f(166,266,366)\r\n","options":[" `val c = a + b`\r\n"," `val c = list0f(a, b)`\r\n"," `val c = list0f(*a, *b)` ([reference](https://www.techiedelight.com/join-two-lists-kotlin/))\r\n"," `val c = list0f(a+b)`\r\n\r\n"],"correctAns":3},{"query":" Q73. What is the preferred way to create an immutable variable of type long?","options":[" `var longInt = 10L`\r\n"," `const long longInt = 10`\r\n"," `val longInt = 10L`\r\n"," `val longInt:Long = 10`\r\n\r\n"],"correctAns":3},{"query":" Q74. Which line converts the binaryStr, whish contain only 0s and 1s, to an integer representing its decimal value?","code":"kotlin\r\nval binaryStr = \"00001111\"\r\n","options":[" `val myInt = toInt(binaryStr)`\r\n"," `val myInt = binaryStr.toInt(\"0b\")`\r\n"," `val myInt = binaryStr.toInt()`\r\n"," `val myInt = binaryStr.toInt(2)`\r\n\r\n"],"correctAns":4},{"query":" Q75. In a Kotlin program, which lines can be marked with a label","options":[" `Any program line can be marked with a label`\r\n"," `Any statement can be marked with a label`\r\n"," `Any expression can be marked with a lable` ([reference](https://agrawalsuneet.github.io/blogs/label-reference-in-kotlin/))\r\n"," `Only the beginning of loops can be marked with a label`\r\n\r\n"],"correctAns":3}]