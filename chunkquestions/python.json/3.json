[{"query":" Q59. When would you use a for loop?","options":[" Only in some situations, as loops are used only for certain type of programming.\r\n"," When you need to check every element in an iterable of known length.\r\n"," When you want to minimize the use of strings in your code.\r\n"," When you want to run code in one file for a function in another file.\r\n\r\n"],"correctAns":2},{"query":" Q60. What is the most self-descriptive way to define a function that calculates sales tax on a purchase?","code":null,"options":["\r\n\r\n```python\r\ndef tax(my_float):\r\n    '''Calculates the sales tax of a purchase. Takes in a float representing the subtotal as an argument and returns a float representing the sales tax.'''\r\n    pass\r\n```\r\n\r\n","\r\n\r\n```python\r\ndef tx(amt):\r\n    '''Gets the tax on an amount.'''\r\n```\r\n\r\n","\r\n\r\n```python\r\ndef sales_tax(amount):\r\n    '''Calculates the sales tax of a purchase. Takes in a float representing the subtotal as an argument and returns a float representing the sales tax.'''\r\n```\r\n\r\n","\r\n\r\n```python\r\ndef calculate_sales_tax(subtotal):\r\n    pass\r\n```\r\n\r\n"],"correctAns":4},{"query":" Q61. What would happen if you did not alter the state of the element that an algorithm is operating on recursively?","options":[" You do not have to alter the state of the element the algorithm is recursing on.\r\n"," You would eventually get a KeyError when the recursive portion of the code ran out of items to recurse on.\r\n"," You would get a RuntimeError: maximum recursion depth exceeded.\r\n"," The function using recursion would return None.\r\n\r\n[explanation](https://www.python-course.eu/python3_recursive_functions.php#Definition-of-Recursion)\r\n\r\n"],"correctAns":3},{"query":" Q62. What is the runtime complexity of searching for an item in a binary search tree?","options":[" The runtime for searching in a binary search tree is O(1) because each node acts as a key, similar to a dictionary.\r\n"," The runtime for searching in a binary search tree is O(n!) because every node must be compared to every other node.\r\n"," The runtime for searching in a binary search tree is generally O(h), where h is the height of the tree.\r\n"," The runtime for searching in a binary search tree is O(n) because every node in the tree must be visited.\r\n\r\n[explanation](https://www.geeksforgeeks.org/binary-search-tree-data-structure/)\r\n\r\n"],"correctAns":3},{"query":" Q63. Why would you use `mixin`?","options":[" You use a `mixin` to force a function to accept an argument at runtime even if the argument wasn't included in the function's definition.\r\n"," You use a `mixin` to allow a decorator to accept keyword arguments.\r\n"," You use a `mixin` to make sure that a class's attributes and methods don't interfere with global variables and functions.\r\n"," If you have many classes that all need to have the same functionality, you'd use a `mixin` to define that functionality.\r\n\r\n[explanation](https://www.youtube.com/watch?v=zVFLBfqV-q0)\r\n\r\n"],"correctAns":4},{"query":" Q64. What is the runtime complexity of adding an item to a stack and removing an item from a stack?","options":[" Add items to a stack in O(1) time and remove items from a stack on O(n) time.\r\n"," Add items to a stack in O(1) time and remove items from a stack in O(1) time.\r\n"," Add items to a stack in O(n) time and remove items from a stack on O(1) time.\r\n"," Add items to a stack in O(n) time and remove items from a stack on O(n) time.\r\n\r\n"],"correctAns":2},{"query":" Q65. Which statement accurately describes how items are added to and removed from a stack?","options":[" a stacks adds items to one side and removes items from the other side.\r\n"," a stacks adds items to the top and removes items from the top.\r\n"," a stacks adds items to the top and removes items from anywhere in the stack.\r\n"," a stacks adds items to either end and removes items from either end.\r\n\r\n**Explanation** Stack uses the _first in first out_ approach\r\n\r\n"],"correctAns":2},{"query":" Q66. What is a base case in a recursive function?","options":[" A base case is the condition that allows the algorithm to stop recursing. It is usually a problem that is small enough to solve directly.\r\n"," The base case is summary of the overall problem that needs to be solved.\r\n"," The base case is passed in as an argument to a function whose body makes use of recursion.\r\n"," The base case is similar to a base class, in that it can be inherited by another object.\r\n\r\n"],"correctAns":1},{"query":" Q67. Why is it considered good practice to open a file from within a Python script by using the `with` keyword?","options":[" The `with` keyword lets you choose which application to open the file in.\r\n"," The `with` keyword acts like a `for` loop, and lets you access each line in the file one by one.\r\n"," There is no benefit to using the `with` keyword for opening a file in Python.\r\n"," When you open a file using the `with` keyword in Python, Python will make sure the file gets closed, even if an exception or error is thrown.\r\n\r\n[explanation](https://docs.python.org/3/tutorial/inputoutput.html#reading-and-writing-files)\r\n\r\n"],"correctAns":4},{"query":" Q68. Why would you use a virtual environment?","options":[" Virtual environments create a \"bubble\" around your project so that any libraries or packages you install within it don't affect your entire machine.\r\n"," Teams with remote employees use virtual environments so they can share code, do code reviews, and collaborate remotely.\r\n"," Virtual environments were common in Python 2 because they augmented missing features in the language. Virtual environments are not necessary in Python 3 due to advancements in the language.\r\n"," Virtual environments are tied to your GitHub or Bitbucket account, allowing you to access any of your repos virtually from any machine.\r\n\r\n"],"correctAns":1},{"query":" Q69. What is the correct way to run all the doctests in a given file from the command line?","options":[" python3 -m doctest <_filename_>\r\n"," python3 <_filename_>\r\n"," python3 <_filename_> rundoctests\r\n"," python3 doctest\r\n\r\n[tutorial video](https://www.youtube.com/watch?v=P8qm0VAbbww&t=180s)\r\n\r\n"],"correctAns":1},{"query":" Q70. What is a lambda function ?","options":[" any function that makes use of scientific or mathematical constants, often represented by Greek letters in academic writing\r\n"," a function that get executed when decorators are used\r\n"," any function whose definition is contained within five lines of code or fewer\r\n"," a small, anonymous function that can take any number of arguments but has only expression to evaluate\r\n\r\n"],"correctAns":4},{"query":" Q71. What is the primary difference between lists and tuples?","options":[" You can access a specifc element in a list by indexing to its position, but you cannot access a specific element in a tuple unless you iterate through the tuple\r\n"," Lists are mutable, meaning you can change the data that is inside them at any time. Tuples are immutable, meaning you cannot change the data that is inside them once you have created the tuple.\r\n"," Lists are immutable, meaning you cannot change the data that is inside them once you have created the list. Tuples are mutable, meaning you can change the data that is inside them at any time.\r\n"," Lists can hold several data types inside them at once, but tuples can only hold the same data type if multiple elements are present.\r\n\r\n"],"correctAns":2},{"query":" Q72. Which statement about static method is true?","options":[" Static methods can be bound to either a class or an instance of a class.\r\n"," Static methods can access and modify the state of a class or an instance of a class.\r\n"," Static methods serve mostly as utility or helper methods, since they cannot access or modify a class's state.\r\n"," Static methods are called static because they always return None.\r\n\r\n"],"correctAns":3},{"query":" Q73. What does a generator return?","options":[" None\r\n"," An iterable object\r\n"," A linked list data structure from a non-empty list\r\n"," All the keys of the given dictionary\r\n\r\n"],"correctAns":2},{"query":" Q74. What is the difference between class attributes and instance attributes?","options":[" Instance attributes can be changed, but class attributes cannot be changed\r\n"," Class attributes are shared by all instances of the class. Instance attributes may be unique to just that instance\r\n"," There is no difference between class attributes and instance attributes\r\n"," Class attributes belong just to the class, not to instance of that class. Instance attributes are shared among all instances of a class\r\n\r\n"],"correctAns":2},{"query":" Q75. What is the correct syntax of creating an instance method?","code":null,"options":["\r\n\r\n```python\r\ndef get_next_card():\r\n  # method body goes here\r\n```\r\n\r\n","\r\n\r\n```python\r\ndef get_next_card(self):\r\n  # method body goes here\r\n```\r\n\r\n","\r\n\r\n```python\r\ndef self.get_next_card():\r\n  # method body goes here\r\n```\r\n\r\n","\r\n\r\n```python\r\ndef self.get_next_card(self):\r\n  # method body goes here\r\n```\r\n\r\n"],"correctAns":2},{"query":" Q76. What is the correct way to call a function?","options":[" get_max_num([57, 99, 31, 18])\r\n"," call.(get_max_num)\r\n"," def get_max_num([57, 99, 31, 18])\r\n"," call.get_max_num([57, 99, 31, 18])\r\n\r\n"],"correctAns":1},{"query":" Q77. How is comment created?","options":[" `-- This is a comment`\r\n"," `# This is a comment`\r\n"," `/_ This is a comment _\\`\r\n"," `// This is a comment`\r\n\r\n"],"correctAns":2},{"query":" Q78. What is the correct syntax for replacing the string apple in the list with the string orange?","code":"\r\nmy_list = ['kiwi', 'apple', 'banana']\r\n","options":[" orange = my_list[1]\r\n"," my_list[1] = 'orange'\r\n"," my_list['orange'] = 1\r\n"," my_list[1] == orange\r\n\r\n"],"correctAns":2},{"query":" Q79. What will happen if you use a while loop and forget to include logic that eventually causes the while loop to stop?","options":[" Nothing will happen; your computer knows when to stop running the code in the while loop.\r\n"," You will get a KeyError.\r\n"," Your code will get stuck in an infinite loop.\r\n"," You will get a WhileLoopError.\r\n\r\n"],"correctAns":3},{"query":" Q80. Describe the functionality of a queue?","options":[" A queue adds items to either end and removes items from either end.\r\n"," A queue adds items to the top and removes items from the top.\r\n"," A queue adds items to the top, and removes items from anywhere in, a list.\r\n"," A queue adds items to the top and removes items from anywhere in the queue.\r\n\r\n"],"correctAns":1},{"query":" Q81. Which choice is the most syntactically correct example of the conditional branching?","code":null,"options":["\r\n\r\n```python\r\nnum_people = 5\r\n\r\nif num_people > 10:\r\n    print(\"There is a lot of people in the pool.\")\r\nelif num_people > 4:\r\n    print(\"There are some people in the pool.\")\r\nelse:\r\n    print(\"There is no one in the pool.\")\r\n```\r\n\r\n","\r\n\r\n```python\r\nnum_people = 5\r\n\r\nif num_people > 10:\r\n    print(\"There is a lot of people in the pool.\")\r\nif num_people > 4:\r\n    print(\"There are some people in the pool.\")\r\nelse:\r\n    print(\"There is no one in the pool.\")\r\n```\r\n\r\n","\r\n\r\n```python\r\nnum_people = 5\r\n\r\nif num_people > 10;\r\n    print(\"There is a lot of people in the pool.\")\r\nelif num_people > 4;\r\n    print(\"There are some people in the pool.\")\r\nelse;\r\n    print(\"There is no one in the pool.\")\r\n```\r\n\r\n","\r\n\r\n```python\r\nif num_people > 10;\r\n    print(\"There is a lot of people in the pool.\")\r\nif num_people > 4;\r\n    print(\"There are some people in the pool.\")\r\nelse;\r\n    print(\"There is no one in the pool.\")\r\n```\r\n\r\nThis question seems to be an updated version of Question 19.\r\n\r\n"],"correctAns":1},{"query":" Q82. How does `defaultdict` work?","options":[" `defaultdict` will automatically create a dictionary for you that has keys which are the integers 0-10.\r\n"," `defaultdict` forces a dictionary to only accept keys that are of the types specified when you created the `defaultdict` (such as strings or integers).\r\n"," If you try to read from a `defaultdict` with a nonexistent key, a new default key-value pair will be created for you instead of throwing a `KeyError`.\r\n"," `defaultdict` stores a copy of a dictionary in memory that you can default to if the original gets unintentionally modified.\r\n\r\nUpdated version of Question 14.\r\n\r\n"],"correctAns":3},{"query":" Q83. What is the correct syntax for adding a key called `variety` to the `fruit_info` dictionary that has a value of `Red Delicious`?","options":[" `fruit_info['variety'] == 'Red Delicious'`\r\n"," `fruit_info['variety'] = 'Red Delicious'`\r\n"," `red_delicious = fruit_info['variety']`\r\n"," `red_delicious == fruit_info['variety']`\r\n\r\n"],"correctAns":2}]