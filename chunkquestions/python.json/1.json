[{"query":" Q1. What is an abstract class?","options":[" An abstract class is the name for any class from which you can instantiate an object.\r\n"," Abstract classes must be redefined any time an object is instantiated from them.\r\n"," Abstract classes must inherit from concrete classes.\r\n"," An abstract class exists only so that other \"concrete\" classes can inherit from the abstract class.\r\n\r\n[reference](https://www.geeksforgeeks.org/abstract-classes-in-python/)\r\n\r\n"],"correctAns":4},{"query":" Q3. What data structure does a binary tree degenerate to if it isn't balanced properly?","options":[" linked list\r\n"," queue\r\n"," set\r\n"," OrderedDict\r\n\r\n"],"correctAns":1},{"query":" Q4. What statement about static methods is true?","options":[" Static methods are called static because they always return `None`.\r\n"," Static methods can be bound to either a class or an instance of a class.\r\n"," Static methods serve mostly as utility methods or helper methods, since they can't access or modify a class's state.\r\n"," Static methods can access and modify the state of a class or an instance of a class.\r\n\r\n[reference](https://www.geeksforgeeks.org/class-method-vs-static-method-python)\r\n\r\n"],"correctAns":3},{"query":" Q5. What are attributes?","options":[" Attributes are long-form version of an `if/else` statement, used when testing for equality between objects.\r\n"," Attributes are a way to hold data or describe a state for a class or an instance of a class.\r\n"," Attributes are strings that describe characteristics of a class.\r\n"," Function arguments are called \"attributes\" in the context of class methods and instance methods.\r\n\r\n**Explanation**\r\nAttributes defined under the class, arguments goes under the functions. arguments usually refer as parameter, whereas attributes are the constructor of the class or an instance of a class.\r\n\r\n"],"correctAns":2},{"query":" Q6. What is the term to describe this code?","options":[" `tuple assignment`\r\n"," `tuple unpacking`\r\n"," `tuple matching`\r\n"," `tuple duplication`\r\n\r\n"],"correctAns":2},{"query":" Q8. What is one of the most common use of Python's sys library?","options":[" to capture command-line arguments given at a file's runtime\r\n"," to connect various systems, such as connecting a web front end, an API service, a database, and a mobile app\r\n"," to take a snapshot of all the packages and libraries in your virtual environment\r\n"," to scan the health of your Python ecosystem while inside a virtual environment\r\n\r\n"],"correctAns":1},{"query":" Q9. What is the runtime of accessing a value in a dictionary by using its key?","options":[" O(n), also called linear time.\r\n"," O(log n), also called logarithmic time.\r\n"," O(n^2), also called quadratic time.\r\n"," O(1), also called constant time.\r\n\r\n"],"correctAns":4},{"query":" Q10. What is the correct syntax for defining a class called Game, if it inherits from a parent class called LogicGame?","options":[" `class Game(LogicGame): pass`\r\n"," `def Game(LogicGame): pass`\r\n"," `def Game.LogicGame(): pass`\r\n"," `class Game.LogicGame(): pass`\r\n\r\n**Explanation:** `The parent class which is inherited is passed as an argument to the child class. Therefore, here the first option is the right answer.`\r\n\r\n"],"correctAns":1},{"query":" Q12. What built-in Python data type is commonly used to represent a stack?","options":[" `set`\r\n"," `list`\r\n"," `None`\r\n"," `dictionary`\r\n\r\n`. You can only build a stack from scratch.`\r\n\r\n"],"correctAns":2},{"query":" Q13. What would this expression return?","code":"python\r\ncollege_years = ['Freshman', 'Sophomore', 'Junior', 'Senior']\r\nreturn list(enumerate(college_years, 2019))\r\n","options":[" `[('Freshman', 2019), ('Sophomore', 2020), ('Junior', 2021), ('Senior', 2022)]`\r\n"," `[(2019, 2020, 2021, 2022), ('Freshman', 'Sophomore', 'Junior', 'Senior')]`\r\n"," `[('Freshman', 'Sophomore', 'Junior', 'Senior'), (2019, 2020, 2021, 2022)]`\r\n"," `[(2019, 'Freshman'), (2020, 'Sophomore'), (2021, 'Junior'), (2022, 'Senior')]`\r\n\r\n"],"correctAns":4},{"query":" Q14. How does `defaultdict` work?","options":[" `defaultdict` will automatically create a dictionary for you that has keys which are the integers 0-10.\r\n"," `defaultdict` forces a dictionary to only accept keys that are of the data type specified when you created the `defaultdict` (such as strings or integers).\r\n"," If you try to read from a `defaultdict` with a nonexistent key, a new default key-value pair will be created for you instead of throwing a `KeyError`.\r\n"," `defaultdict` stores a copy of a dictionary in memory that you can default to if the original gets unintentionally modified.\r\n\r\n"],"correctAns":3},{"query":" Q15. What is the correct syntax for defining a class called \"Game\", if it inherits from a parent class called \"LogicGame\"?","options":[" `class Game.LogicGame(): pass`\r\n"," `def Game(LogicGame): pass`\r\n"," `class Game(LogicGame): pass`\r\n"," `def Game.LogicGame(): pass`\r\n\r\n*Duplicate of question 10.*\r\n\r\n"],"correctAns":3},{"query":" Q17. Which of these is NOT a characteristic of namedtuples?","options":[" You can assign a name to each of the `namedtuple` members and refer to them that way, similarly to how you would access keys in `dictionary`.\r\n"," Each member of a namedtuple object can be indexed to directly, just like in a regular `tuple`.\r\n"," `namedtuples` are just as memory efficient as regular `tuples`.\r\n"," No import is needed to use `namedtuples` because they are available in the standard library.\r\n\r\n**We need to import it using `from collections import namedtuple` **\r\n\r\n"],"correctAns":4},{"query":" Q18. What is an instance method?","options":[" Instance methods can modify the state of an instance or the state of its parent class.\r\n"," Instance methods hold data related to the instance.\r\n"," An instance method is any class method that doesn't take any arguments.\r\n"," An instance method is a regular function that belongs to a class, but it must return `None`.\r\n\r\n"],"correctAns":1},{"query":" Q19. Which choice is the most syntactically correct example of the conditional branching?","code":null,"options":["\r\n\r\n```python\r\nnum_people = 5\r\n\r\nif num_people > 10:\r\n    print(\"There is a lot of people in the pool.\")\r\nelif num_people > 4;\r\n    print(\"There are some people in the pool.\")\r\nelif num_people > 0;\r\n    print(\"There are a few people in the pool.\")\r\nelse:\r\n    print(\"There is no one in the pool.\")\r\n```\r\n\r\n","\r\n\r\n```python\r\nnum_people = 5\r\n\r\nif num_people > 10:\r\n    print(\"There is a lot of people in the pool.\")\r\nif num_people > 4:\r\n    print(\"There are some people in the pool.\")\r\nif num_people > 0:\r\n    print(\"There are a few people in the pool.\")\r\nelse:\r\n    print(\"There is no one in the pool.\")\r\n```\r\n\r\n","\r\n\r\n```python\r\nnum_people = 5\r\n\r\nif num_people > 10:\r\n    print(\"There is a lot of people in the pool.\")\r\nelif num_people > 4:\r\n    print(\"There are some people in the pool.\")\r\nelif num_people > 0:\r\n    print(\"There are a few people in the pool.\")\r\nelse:\r\n    print(\"There is no one in the pool.\")\r\n```\r\n\r\n","\r\n\r\n```python\r\nif num_people > 10;\r\n    print(\"There is a lot of people in the pool.\")\r\nif num_people > 4:\r\n    print(\"There are some people in the pool.\")\r\nif num_people > 0:\r\n    print(\"There are a few people in the pool.\")\r\nelse:\r\n    print(\"There is no one in the pool.\")\r\n```\r\n\r\nAlso see Question 85 for the same question with different answers.\r\n\r\n"],"correctAns":3},{"query":" Q20. Which statement does NOT describe the object-oriented programming concept of encapsulation?","options":[" It protects the data from outside interference.\r\n"," A parent class is encapsulated and no data from the parent class passes on to the child class.\r\n"," It keeps data and the methods that can manipulate that data in one place.\r\n"," It only allows the data to be changed by methods.\r\n\r\n"],"correctAns":4},{"query":" Q21. What is the purpose of an if/else statement?","options":[" It tells the computer which chunk of code to run if the instructions you coded are incorrect.\r\n"," It runs one chunk of code if all the imports were successful, and another chunk of code if the imports were not successful.\r\n"," It executes one chunk of code if a condition is true, but a different chunk of code if the condition is false.\r\n"," It tells the computer which chunk of code to run if the is enough memory to handle it, and which chunk of code to run if there is not enough memory to handle it.\r\n\r\n"],"correctAns":3},{"query":" Q22. What built-in Python data type is best suited for implementing a queue?","options":[" dictionary\r\n"," set\r\n"," None. You can only build a queue from scratch.\r\n"," list\r\n\r\n"],"correctAns":4},{"query":" Q23. What is the correct syntax for instantiating a new object of the type Game?","options":[" `my_game = class.Game()`\r\n"," `my_game = class(Game)`\r\n"," `my_game = Game()`\r\n"," `my_game = Game.create()`\r\n\r\n"],"correctAns":3},{"query":" Q25. If you don't explicitly return a value from a function, what happens?","options":[" The function will return a RuntimeError if you don't return a value.\r\n"," If the return keyword is absent, the function will return `None`.\r\n"," If the return keyword is absent, the function will return `True`.\r\n"," The function will enter an infinite loop because it won't know when to stop executing its code.\r\n\r\n"],"correctAns":2},{"query":" Q26. What is the purpose of the `pass` statement in Python?","options":[" It is used to skip the `yield` statement of a generator and return a value of None.\r\n"," It is a null operation used mainly as a placeholder in functions, classes, etc.\r\n"," It is used to pass control from one statement block to another.\r\n"," It is used to skip the rest of a `while` or `for loop` and return to the start of the loop.\r\n\r\n"],"correctAns":2},{"query":" Q27. What is the term used to describe items that may be passed into a function?","options":[" arguments\r\n"," paradigms\r\n"," attributes\r\n"," decorators\r\n\r\n"],"correctAns":1},{"query":" Q28. Which collection type is used to associate values with unique keys?","options":[" `slot`\r\n"," `dictionary`\r\n"," `queue`\r\n"," `sorted list`\r\n\r\n"],"correctAns":2},{"query":" Q29. When does a for loop stop iterating?","options":[" when it encounters an infinite loop\r\n"," when it encounters an if/else statement that contains a break keyword\r\n"," when it has assessed each item in the iterable it is working on or a break keyword is encountered\r\n"," when the runtime for the loop exceeds O(n^2)\r\n\r\n"],"correctAns":3},{"query":" Q30. Assuming the node is in a singly linked list, what is the runtime complexity of searching for a specific node within a singly linked list?","options":[" The runtime is O(n) because in the worst case, the node you are searching for is the last node, and every node in the linked list must be visited.\r\n"," The runtime is O(nk), with n representing the number of nodes and k representing the amount of time it takes to access each node in memory.\r\n"," The runtime cannot be determined unless you know how many nodes are in the singly linked list.\r\n"," The runtime is O(1) because you can index directly to a node in a singly linked list.\r\n\r\n"],"correctAns":1}]