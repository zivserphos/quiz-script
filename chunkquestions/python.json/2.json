[{"query":" Q31. Given the following three list, how would you create a new list that matches the desired output printed below?","code":"python\r\nfruits = ['Apples', 'Oranges', 'Bananas']\r\nquantities = [5, 3, 4]\r\nprices = [1.50, 2.25, 0.89]\r\n\r\n#Desired output\r\n[('Apples', 5, 1.50),\r\n('Oranges', 3, 2.25),\r\n('Bananas', 4, 0.89)]\r\n","options":["\r\n\r\n```python\r\noutput = []\r\n\r\nfruit_tuple_0 = (first[0], quantities[0], price[0])\r\noutput.append(fruit_tuple)\r\n\r\nfruit_tuple_1 = (first[1], quantities[1], price[1])\r\noutput.append(fruit_tuple)\r\n\r\nfruit_tuple_2 = (first[2], quantities[2], price[2])\r\noutput.append(fruit_tuple)\r\n\r\nreturn output\r\n```\r\n\r\n","\r\n\r\n```python\r\ni = 0\r\noutput = []\r\nfor fruit in fruits:\r\n    temp_qty = quantities[i]\r\n    temp_price = prices[i]\r\n    output.append((fruit, temp_qty, temp_price))\r\n    i += 1\r\nreturn output\r\n```\r\n\r\n","\r\n\r\n```python\r\ngroceries = zip(fruits, quantities, prices)\r\nreturn groceries\r\n\r\n>>> [\r\n('Apples', 5, 1.50),\r\n('Oranges', 3, 2.25),\r\n('Bananas', 4, 0.89)\r\n]\r\n```\r\n\r\n","\r\n\r\n```python\r\ni = 0\r\noutput = []\r\nfor fruit in fruits:\r\n    for qty in quantities:\r\n        for price in prices:\r\n            output.append((fruit, qty, price))\r\n    i += 1\r\nreturn output\r\n```\r\n\r\n"],"correctAns":2},{"query":" Q33. What is the correct syntax for calling an instance method on a class named Game?","code":null,"options":["\r\n\r\n```python\r\n>>> dice = Game()\r\n>>> dice.roll()\r\n```\r\n\r\n","\r\n\r\n```python\r\n>>> dice = Game(self)\r\n>>> dice.roll(self)\r\n```\r\n\r\n","\r\n\r\n```python\r\n>>> dice = Game()\r\n>>> dice.roll(self)\r\n```\r\n\r\n","\r\n\r\n```python\r\n>>> dice = Game(self)\r\n>>> dice.roll()\r\n```\r\n\r\n"],"correctAns":1},{"query":" Q34. What is the algorithmic paradigm of quick sort?","options":[" backtracking\r\n"," dynamic programming\r\n"," decrease and conquer\r\n"," divide and conquer\r\n\r\n"],"correctAns":4},{"query":" Q35. What is runtime complexity of the list's built-in `.append()` method?","options":[" O(1), also called constant time\r\n"," O(log n), also called logarithmic time\r\n"," O(n^2), also called quadratic time\r\n"," O(n), also called linear time\r\n\r\n"],"correctAns":1},{"query":" Q36. What is key difference between a `set` and a `list`?","options":[" A set is an ordered collection unique items. A list is an unordered collection of non-unique items.\r\n"," Elements can be retrieved from a list but they cannot be retrieved from a set.\r\n"," A set is an ordered collection of non-unique items. A list is an unordered collection of unique items.\r\n"," A set is an unordered collection unique items. A list is an ordered collection of non-unique items.\r\n\r\n"],"correctAns":4},{"query":" Q37. What is the definition of abstraction as applied to object-oriented Python?","options":[" Abstraction means that a different style of code can be used, since many details are already known to the program behind the scenes.\r\n"," Abstraction means the implementation is hidden from the user, and only the relevant data or information is shown.\r\n"," Abstraction means that the data and the functionality of a class are combined into one entity.\r\n"," Abstraction means that a class can inherit from more than one parent class.\r\n\r\n"],"correctAns":2},{"query":" Q38. What does this function print?","code":"python\r\ndef print_alpha_nums(abc_list, num_list):\r\n    for char in abc_list:\r\n        for num in num_list:\r\n            print(char, num)\r\n    return\r\n\r\nprint_alpha_nums(['a', 'b', 'c'], [1, 2, 3])\r\n","options":["\r\n\r\n```python\r\na 1\r\na 2\r\na 3\r\nb 1\r\nb 2\r\nb 3\r\nc 1\r\nc 2\r\nc 3\r\n```\r\n\r\n","\r\n\r\n```python\r\n['a', 'b', 'c'], [1, 2, 3]\r\n```\r\n\r\n","\r\n\r\n```python\r\naaa\r\nbbb\r\nccc\r\n111\r\n222\r\n333\r\n```\r\n\r\n","\r\n\r\n```python\r\na 1 2 3\r\nb 1 2 3\r\nc 1 2 3\r\n```\r\n\r\n"],"correctAns":1},{"query":" Q39. Correct representation of doctest for function in Python","code":null,"options":["\r\n\r\n```python\r\ndef sum(a, b):\r\n    # a = 1\r\n    # b = 2\r\n    # sum(a, b) = 3\r\n\r\n    return a + b\r\n```\r\n\r\n","\r\n\r\n```python\r\ndef sum(a, b):\r\n    \"\"\"\r\n    a = 1\r\n    b = 2\r\n    sum(a, b) = 3\r\n    \"\"\"\r\n\r\n    return a + b\r\n```\r\n\r\n","\r\n\r\n```python\r\ndef sum(a, b):\r\n    \"\"\"\r\n    >>> a = 1\r\n    >>> b = 2\r\n    >>> sum(a, b)\r\n    3\r\n    \"\"\"\r\n\r\n    return a + b\r\n```\r\n\r\n","\r\n\r\n```python\r\ndef sum(a, b):\r\n    '''\r\n    a = 1\r\n    b = 2\r\n    sum(a, b) = 3\r\n    '''\r\n    return a + b\r\n```\r\n\r\n**Explanation:** Use \"\"\" to start and end the docstring and use >>> to represent the output. If you write this correctly you can also run the doctest using build-in doctest module\r\n\r\n"],"correctAns":3},{"query":" Q40. Suppose a Game class inherits from two parent classes: BoardGame and LogicGame. Which statement is true about the methods of an object instantiated from the Game class?","options":[" When instantiating an object, the object doesn't inherit any of the parent class's methods.\r\n"," When instantiating an object, the object will inherit the methods of whichever parent class has more methods.\r\n"," When instantiating an object, the programmer must specify which parent class to inherit methods from.\r\n"," An instance of the Game class will inherit whatever methods the BoardGame and LogicGame classes have.\r\n\r\n"],"correctAns":4},{"query":" Q42. What symbol(s) do you use to assess equality between two elements?","options":[" `&&`\r\n"," `=`\r\n"," `==`\r\n"," `||`\r\n\r\n"],"correctAns":3},{"query":" Q43. Review the code below. What is the correct syntax for changing the price to 1.5?","code":"python\r\nfruit_info = {\r\n  'fruit': 'apple',\r\n  'count': 2,\r\n  'price': 3.5\r\n}\r\n","options":[" `fruit_info ['price'] = 1.5`\r\n"," `my_list [3.5] = 1.5`\r\n"," `1.5 = fruit_info ['price]`\r\n"," `my_list['price'] == 1.5`\r\n\r\n"],"correctAns":1},{"query":" Q44. What value would be returned by this check for equality?","options":[" `yes`\r\n"," `False`\r\n"," `True`\r\n"," `None`\r\n\r\n**Explanation** - `!=` is equivalent to **not equal to** in python\r\n\r\n"],"correctAns":3},{"query":" Q46. What is meant by the phrase \"space complexity\"?","options":[" `How many microprocessors it would take to run your code in less than one second`\r\n"," `How many lines of code are in your code file`\r\n"," `The amount of space taken up in memory as a function of the input size`\r\n"," `How many copies of the code file could fit in 1 GB of memory`\r\n\r\n"],"correctAns":3},{"query":" Q47. What is the correct syntax for creating a variable that is bound to a dictionary?","options":[" `fruit_info = {'fruit': 'apple', 'count': 2, 'price': 3.5}`\r\n"," `fruit_info =('fruit': 'apple', 'count': 2,'price': 3.5 ).dict()`\r\n"," `fruit_info = ['fruit': 'apple', 'count': 2,'price': 3.5 ].dict()`\r\n"," `fruit_info = to_dict('fruit': 'apple', 'count': 2, 'price': 3.5)`\r\n\r\n"],"correctAns":1},{"query":" Q48. What is the proper way to write a list comprehension that represents all the keys in this dictionary?","options":[" `fruit_names = [x in fruits.keys() for x]`\r\n"," `fruit_names = for x in fruits.keys() *`\r\n"," `fruit_names = [x for x in fruits.keys()]`\r\n"," `fruit_names = x for x in fruits.keys()`\r\n\r\n"],"correctAns":3},{"query":" Q49. What is the purpose of the `self` keyword when defining or calling methods on an instance of an object?","options":[" `self` refers to the class that was inherited from to create the object using `self`.\r\n"," There is no real purpose for the `self` method. It's just legacy computer science jargon that Python keeps to stay consistent with other programming languages.\r\n"," `self` means that no other arguments are required to be passed into the method.\r\n"," `self` refers to the instance whose method was called.\r\n\r\n**Explanation:** - Try running the example of the Q45 without passing `self` argument inside the `__init__`, you'll understand the reason. You'll get the error like this `__init__() takes 0 positional arguments but 1 was given`, this means that something is going inside even if haven't specified, which is instance itself.\r\n\r\n"],"correctAns":4},{"query":" Q50. What statement about the class methods is true?","options":[" A class method is a regular function that belongs to a class, but it must return None.\r\n"," A class method can modify the state of the class, but they can't directly modify the state of an instance that inherits from that class.\r\n"," A class method is similar to a regular function, but a class method doesn't take any arguments.\r\n"," A class method hold all of the data for a particular class.\r\n\r\n"],"correctAns":2},{"query":" Q51. What does it mean for a function to have linear runtime?","options":[" You did not use very many advanced computer programming concepts in your code.\r\n"," The difficulty level your code is written at is not that high.\r\n"," It will take your program less than half a second to run.\r\n"," The amount of time it takes the function to complete grows linearly as the input size increases.\r\n\r\n"],"correctAns":4},{"query":" Q52. What is the proper way to define a function?","options":[" `def getMaxNum(list_of_nums): # body of function goes here`\r\n"," `func get_max_num(list_of_nums): # body of function goes here`\r\n"," `func getMaxNum(list_of_nums): # body of function goes here`\r\n"," `def get_max_num(list_of_nums): # body of function goes here`\r\n\r\n[explanation for 52 & 53](https://www.python.org/dev/peps/pep-0008/)\r\n\r\n"],"correctAns":4},{"query":" Q53. According to the PEP 8 coding style guidelines, how should constant values be named in Python?","options":[" in camel case without using underscores to separate words -- e.g. `maxValue = 255`\r\n"," in lowercase with underscores to separate words -- e.g. `max_value = 255`\r\n"," in all caps with underscores separating words -- e.g. `MAX_VALUE = 255`\r\n"," in mixed case without using underscores to separate words -- e.g. `MaxValue = 255`\r\n\r\n"],"correctAns":3},{"query":" Q54. Describe the functionality of a deque.","options":[" A deque adds items to one side and remove items from the other side.\r\n"," A deque adds items to either or both sides, but only removes items from the top.\r\n"," A deque adds items at either or both ends, and remove items at either or both ends.\r\n"," A deque adds items only to the top, but remove from either or both sides.\r\n\r\n**Explanation** - `deque` is used to create block chanin and in that there is _first in first out_ approch, which means the last element to enter will be the first to leave.\r\n\r\n"],"correctAns":3},{"query":" Q55. What is the correct syntax for creating a variable that is bound to a set?","options":[" `my_set = {0, 'apple', 3.5}`\r\n"," `my_set = to_set(0, 'apple', 3.5)`\r\n"," `my_set = (0, 'apple', 3.5).to_set()`\r\n"," `my_set = (0, 'apple', 3.5).set()`\r\n\r\n"],"correctAns":1},{"query":" Q56. What is the correct syntax for defining an `__init__()` method that takes no parameters?","code":null,"options":["\r\n\r\n```python\r\nclass __init__(self):\r\n    pass\r\n```\r\n\r\n","\r\n\r\n```python\r\ndef __init__():\r\n    pass\r\n```\r\n\r\n","\r\n\r\n```python\r\nclass __init__():\r\n    pass\r\n```\r\n\r\n","\r\n\r\n```python\r\ndef __init__(self):\r\n    pass\r\n```\r\n\r\n"],"correctAns":4},{"query":" Q57. Which of the following is TRUE About how numeric data would be organised in a binary Search tree?","options":[" For any given Node in a binary Search Tree, the child node to the left is less than the value of the given node and the child node to its right is greater than the given node.\r\n"," Binary Search Tree cannot be used to organize and search through numeric data, given the complication that arise with very deep trees.\r\n"," The top node of the binary search tree would be an arbitrary number. All the nodes to the left of the top node need to be less than the top node's number, but they don't need to ordered in any particular way.\r\n"," The smallest numeric value would go in the top most node. The next highest number would go in its left child node, the the next highest number after that would go in its right child node. This pattern would continue until all numeric values were in their own node.\r\n\r\n"],"correctAns":1},{"query":" Q58. Why would you use a decorator?","options":[" A decorator is similar to a class and should be used if you are doing functional programming instead of object oriented programming.\r\n"," A decorator is a visual indicator to someone reading your code that a portion of your code is critical and should not be changed.\r\n"," You use the decorator to alter the functionality of a function without having to modify the functions code.\r\n"," An import statement is preceded by a decorator, python knows to import the most recent version of whatever package or library is being imported.\r\n\r\n"],"correctAns":3}]