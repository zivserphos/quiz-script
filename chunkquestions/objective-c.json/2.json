[{"query":" Q26. For observing changes to a property, which of these two statements cause the related method to be called and why?","code":"\r\n1. _val = 1;\r\n2. self.val= 100;\r\n","options":[" Statement 2, since it calls the auto-created setter on the property.\r\n"," Statement 1, since it uses the property directly.\r\n"," Statement 2, since it specifies the class instance to use.\r\n"," Statement 1, since it calls the auto-created setter on the property.\r\n\r\n"],"correctAns":1},{"query":" Q27. What is wrong with this code?","code":"\r\nfloat x = 2.0;\r\nint(^foo)(int) = ^(int n1) {\r\n  return (int)(n1*x);\r\n};\r\nfoo(5);\r\n","options":[" Ints and floats can't be multiplied.\r\n"," The parameter isn't declared correctly.\r\n"," x is not in the right scope.\r\n"," Nothing is wrong with this code.\r\n\r\n"],"correctAns":4},{"query":" Q28. What's the difference between an array and a set?","options":[" Arrays are ordered, non-unique values.\r\n"," Arrays are stored sorted.\r\n"," Sets are ordered, unique values.\r\n"," Sets can contain nils.\r\n\r\n"],"correctAns":1},{"query":" Q29. Dot notation can be used for \\_?","options":[" nothing, as they're never used in Objective-C\r\n"," function calls only\r\n"," property getter/setter\r\n"," parameter delimiters\r\n\r\n"],"correctAns":3},{"query":" Q30. What is the value of newVals after this code is executed?","code":"\r\n    NSArray *vals = @[@\"1\", @\"2\", @\"3\"];\r\n    NSPredicate *pred = [NSPredicate predicateWithFormat:@\"SELF.intValue > 1\"];\r\n    NSArray *newVals = [vals filteredArrayUsingPredicate:pred];\r\n","options":[" 2,3\r\n"," nil\r\n"," This code contains an error\r\n"," 2,\"3\"\r\n\r\n"],"correctAns":1},{"query":" Q31. How would this function be called?","options":[" self.foo(5, b:10);\r\n"," This code contains an error.\r\n"," [self foo:5:10:20];\r\n"," [self foo:5 b:10];\r\n\r\n"],"correctAns":4},{"query":" Q33. What is significant about this function declaration?","code":"\r\n    -(void)testFunc:(NSString**)str;\r\n","options":[" The parameter is passed by value and can not be changed\r\n"," \\*\\* is not allowed on a parameter\r\n"," The parameter may be nil\r\n"," The parameter is passed by reference and may be changed\r\n\r\n"],"correctAns":4},{"query":" Q34. What is printed from this code execution?","code":"\r\n    typedef enum {\r\n        thing1,\r\n        thing2,\r\n        thing3\r\n    } Thing;\r\n\r\n\r\n    -(void) enumStuff {\r\n        NSLog(@\"%d\", thing2);\r\n    }\r\n","options":[" 0\r\n"," 1\r\n"," thing2\r\n"," This code does not print anything\r\n\r\n"],"correctAns":2},{"query":" Q35. You are worried about threaded access to a property and possible collision in writing. What directive should you use on the property?","options":[" non-atomic\r\n"," strong\r\n"," weak\r\n"," atomic\r\n\r\n"],"correctAns":4},{"query":" Q36. What is wrong with this line of code?","code":"\r\nint temp = 1==1;\r\n","options":[" `temp` is a keyword.\r\n"," 1==1 is invalid.\r\n"," 1==1 evaluates to a Boolean.\r\n"," Nothing is wrong with it.\r\n\r\n"],"correctAns":4},{"query":" Q37. What is special about the code within this block?","code":"\r\ndispatch_async(dispatch_get_main_queue(), ^{\r\n// code\r\n});\r\n","options":[" It executes on the main queue.\r\n"," It is the last code to run before the app goes inactive.\r\n"," It executes on a background thread.\r\n"," It is queued to execute in the background.\r\n\r\n"],"correctAns":1},{"query":" Q38. How many items are in set1 after this code executes?","code":"\r\nNSMutableSet *set1 = [NSMutableSet setWithObjects: @1,@2, @3, @4, @5, nil];\r\n[set1 add0bject:@3];\r\n","options":[" zero\r\n"," six\r\n"," one\r\n"," five\r\n"],"correctAns":4}]