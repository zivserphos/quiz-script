[
    {
        "query": " Q51. Which statement is true about Node.js and threads?",
        "options": [
            " Every Node process runs in a single thread, and all the I/O work is run in that same thread.\r\n",
            " Every Node process gets four threads that it can share between its JavaScript VM and the event loop.\r\n",
            " The event loop is single-threaded, but a JavaScript VM can use multiple threads.\r\n",
            " JavaScript execution in Node.js is single-threaded, but I/O operations are executed using multiple threads.\r\n\r\n**Explanation:** _https://www.geeksforgeeks.org/why-node-js-is-a-single-threaded-language/_\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q52. Which statement about event emitters is false?",
        "options": [
            " Event names must be camelCase strings.\r\n",
            " The emit method allows a arbitrary set of arguments to be passed to the listener functions.\r\n",
            " Any values returned by the listeners for an emitted events are ignored.\r\n",
            " When an event emitter objeect emits an event, all of the functions attached to that specific event are called synchronously.\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q53. Which core module in Node can you use to compile and run JavaScript code in a sandbox environment?",
        "options": [
            " sandbox\r\n",
            " buffer\r\n",
            " vm\r\n",
            " v8\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q54. How would you determine the number of cluster instances to start when using the cluster module?",
        "options": [
            " const numInstances = cluster.instances().length;\r\n",
            " const numInstances = cluster.instances();\r\n",
            " const numInstances = require('os').cpus().length;\r\n",
            " const numInstances = process.cpus().length;\r\n\r\n**Explanation:** _From official docs: [https://nodejs.org/api/cluster.html#cluster_cluster](https://nodejs.org/api/cluster.html#cluster_cluster)_\r\n\r\n"
        ],
        "correctAns": 3
    },
    {
        "query": " Q55. You have to read a large text file, replace some words in it, and write it back to a new file. You know that the memory on your target system is limited. What should you do?",
        "options": [
            " Use regular expressions directly on the file.\r\n",
            " Use Promises and async/await to offload the task to libuv.\r\n",
            " Copy the file into a database and perform the operations there.\r\n",
            " Use readline together with streams to read and transform and write the file contents line by line.\r\n\r\n**Explanation:** _From official docs: [https://nodejs.org/api/readline.html#readline_example_read_file_stream_line_by_line](https://nodejs.org/api/readline.html#readline_example_read_file_stream_line_by_line)_\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q56. Which choice is `not` a Node global object?",
        "options": [
            " process\r\n",
            " exports\r\n",
            " setTimeout\r\n",
            " Buffer\r\n\r\n**Explanation:** _process, exports and setTimeout are global objects, Buffer isn't (please see https://nodejs.org/api/globals.html)_\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q57. What is the correct way to pipe a readable stream and a writable stream?",
        "options": [
            " readableStream.pipe(writableStream)\r\n",
            " readableStream.on(pipe, writableStream)\r\n",
            " writableStream.pipe(readableStream)\r\n",
            " writableStream.on(pipe, readableStream)\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q58. How can you convert path segments into a string using the platform-specific separator as a delimiter?",
        "options": [
            " path.concat\r\n",
            " path.join\r\n",
            " path.format\r\n",
            " path.parse\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q59. What is the purpose of N-API?",
        "options": [
            " to allow users to make requests to the server\r\n",
            " to insulate Addons from changes in the underlying JavaScript engine\r\n",
            " to execute multi-threaded code in the Node environment\r\n",
            " to provide a quick way for users to create REST APIs\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q60. What is a process object and its role?",
        "options": [
            " a locally scoped object that provides information about the current node process\r\n",
            " a global object that provides information about files\r\n",
            " a global object that provides information about the database\r\n",
            " a global object that provides information about the current node process\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q61. What will this code log to the console?",
        "code": "\r\n// File: person.js\r\nexports.name = \"Jane\";\r\n\r\n// File: index.js\r\nconst person = require('./person.js');\r\nconsole.log(person);\r\n",
        "options": [
            " `{'Jane'}`\r\n",
            " `{ name: 'Jane' }`\r\n",
            " `{}`\r\n",
            " `Jane`\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q62. What will this code log to the console?",
        "code": "\r\n// File: person.js\r\nexports = \"John\";\r\n\r\n// File: index.js\r\nconst person = require('./person.js');\r\nconsole.log(person);\r\n",
        "options": [
            " `John`\r\n",
            " `Undefined`\r\n",
            " `{'John'}`\r\n",
            " `{}`\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q63. Is it possible to write tests in Node.js without an external library?",
        "options": [
            " yes, through the assert module\r\n",
            " yes, through the debugger module\r\n",
            " yes, through the console module\r\n",
            " no\r\n\r\n**From the article:** [Making a Testing Framework in Node.js (Without any External Libraries)](https://www.sohamkamani.com/blog/javascript/making-a-node-js-test-runner/)\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q64. Which assert module method is usually used to test the error-first argument in callbacks?",
        "options": [
            " fail\r\n",
            " doesNotThrow\r\n",
            " deepStrictEqual\r\n",
            " ifError\r\n\r\n"
        ],
        "correctAns": 4
    },
    {
        "query": " Q65. Which choice is not a method on the util module?",
        "options": [
            " promisify\r\n",
            " asyncify\r\n",
            " types\r\n",
            " callbackify\r\n\r\n"
        ],
        "correctAns": 2
    },
    {
        "query": " Q66. Which choice is not a subclass of the Error class?",
        "options": [
            " GlobalError\r\n",
            " TypeError\r\n",
            " RangeError\r\n",
            " AssertionError\r\n\r\n"
        ],
        "correctAns": 1
    },
    {
        "query": " Q67. What is Node built on?",
        "options": [
            " Python\r\n",
            " V8 JavaScript engine\r\n",
            " PHP\r\n",
            " c\r\n\r\n"
        ],
        "correctAns": 2
    }
]