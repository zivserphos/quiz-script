[
  {
    "query": " Q1. Which operator returns true if the two compared values are not equal",
    "answers": [" `<>`", " `~`", " `==!`", " `!==`"]
  },
  {
    "query": " Q2. How is a forEach statement different from a for statement",
    "answers": [
      " Only a for statement uses a callback function.",
      " A for statement is generic, but a forEach statement can be used only with an array.",
      " Only a forEach statement lets you specify your own iterator.",
      " A forEach statement is generic, but a for statement can be used only with an array."
    ]
  },
  {
    "query": " Q4. Which statement is the correct way to create a variable called rate and assign it the value 100",
    "answers": [
      " let rate = 100;",
      " let 100 = rate;",
      " 100 = let rate;",
      " rate = 100;"
    ]
  },
  {
    "query": " Q9. How does a function create a closure",
    "answers": [
      " It reloads the document whenever the value changes.",
      " It returns a reference to a variable in its parent scope.",
      " It completes execution without returning.",
      " It copies a local variable to the global scope."
    ]
  },
  {
    "query": " Q12. You need to match a time value such as 12:00:32. Which of the following regular expressions would work for your code",
    "answers": [
      " /[0-9]{2,}:[0-9]{2,}:[0-9]{2,}/",
      " /\\d\\d:\\d\\d:\\d\\d/",
      " /[0-9]+:[0-9]+:[0-9]+/",
      " / : : /NOTE: The first three are all partially correct and will match digits, but the **second option is the most correct** because it will **only** match **2 digit** time values (12:00:32). The first option would have worked if the repitions range looked like `[0-9]{2}`, however because of the **comma** `[0-9]{2,}` it will select 2 **or more** digits (120:000:321). The third option will any range of time digits, single _and_ multiple (meaning `1:2:3` will also match).**More resources:**- [Repeating characters](https://regexone.com/lesson/repeating_characters)- [Kleene operators](https://regexone.com/lesson/kleene_operators)"
    ]
  },
  {
    "query": " Q16. Which property references the DOM object that dispatched an event",
    "answers": [" self", " object", " target", " source"]
  },
  {
    "query": " Q18. Which method converts JSON data to a JavaScript object",
    "answers": [
      " JSON.fromString();",
      " JSON.parse()",
      " JSON.toObject()",
      " JSON.stringify()"
    ]
  },
  {
    "query": " Q19. When would you use a conditional statement",
    "answers": [
      " When you want to reuse a set of statements multiple times.",
      " When you want your code to choose between multiple options.",
      " When you want to group data together.",
      " When you want to loop through a group of statement."
    ]
  },
  {
    "query": " Q21. Which Object method returns an iterable that can be used to iterate over the properties of an object",
    "answers": [
      " Object.get()",
      " Object.loop()",
      " Object.each()",
      " Object.keys()"
    ]
  },
  {
    "query": " Q23. What is one difference between collections created with Map and collections created with Object",
    "answers": [
      " You can iterate over values in a Map in their insertion order.",
      " You can count the records in a Map with a single method call.",
      " Keys in Maps can be strings.",
      " You can access values in a Map without iterating over the whole collection.**Explanation:** `Map.prototype.size returns the number of elements in a Map, whereas Object does not have a built-in method to return its size.`"
    ]
  },
  {
    "query": " Q25. 0 && hi ",
    "answers": [" ReferenceError", " True", " 0", " false"]
  },
  {
    "query": " Q26. Which of the following operators can be used to do a short-circuit evaluation",
    "answers": [" \\++", " \\--", " \\==", " \\|\\|"]
  },
  {
    "query": " Q27. Which statement sets the Person constructor as the parent of the Student constructor in the prototype chain",
    "answers": [
      " Student.parent = Person;",
      " Student.prototype = new Person();",
      " Student.prototype = Person;",
      " Student.prototype = Person();"
    ]
  },
  {
    "query": " Q28. Why would you include a \"use strict\" statement in a JavaScript file",
    "answers": [
      " to tell parsers to interpret your JavaScript syntax loosely",
      " to tell parsers to enforce all JavaScript syntax rules when processing your code",
      " to instruct the browser to automatically fix any errors it finds in the code",
      " to enable ES6 features in your code"
    ]
  },
  {
    "query": " Q29. Which Variable-defining keyword allows its variable to be accessed (as undefined) before the line that defines it",
    "answers": [" all of them", " const", " var", " let"]
  },
  {
    "query": " Q30. Which of the following values is not a Boolean false",
    "answers": [
      " Boolean(0)",
      " Boolean(\"\")",
      " Boolean(NaN)",
      " Boolean(\"false\")"
    ]
  },
  {
    "query": " Q31. Which of the following is not a keyword in JavaScript",
    "answers": [" this", " catch", " function", " array"]
  },
  {
    "query": " Q32. Which variable is an implicit parameter for every function in JavaScript",
    "answers": [" Arguments", " args", " argsArray", " argumentsList"]
  },
  {
    "query": " Q35. Why is it usually better to work with Objects instead of Arrays to store a collection of records",
    "answers": [
      " Objects are more efficient in terms of storage.",
      " Adding a record to an object is significantly faster than pushing a record into an array.",
      " Most operations involve looking up a record, and objects can do that better than arrays.",
      " Working with objects makes the code more readable.**Explanation:** Records in an object can be retrieved using their key which can be any given value (e.g. an employee ID, a city name, etc), whereas to retrieve a record from an array we need to know its index."
    ]
  },
  {
    "query": " Q36. Which statement is true about the \"async\" attribute for the HTML script tag",
    "answers": [
      " It can be used for both internal and external JavaScript code.",
      " It can be used only for internal JavaScript code.",
      " It can be used only for internal or external JavaScript code that exports a promise.",
      " It can be used only for external JavaScript code."
    ]
  },
  {
    "query": " Q37. How do you import the lodash library making it top-level Api available as the \"\\_\" variable",
    "answers": [
      " `import _ from 'lodash';`",
      " `import 'lodash' as _;`",
      " `import '_' from 'lodash;`",
      " `import lodash as _ from 'lodash';`"
    ]
  },
  {
    "query": " Q41. Which statement is true about Functional Programming",
    "answers": [
      " Every object in the program has to be a function.",
      " Code is grouped with the state it modifies.",
      " Date fields and methods are kept in units.",
      " Side effects are not allowed."
    ]
  },
  {
    "query": " Q42. Your code is producing the error: TypeError: Cannot read property 'reduce' of undefined. What does that mean",
    "answers": [
      " You are calling a method named reduce on an object that's declared but has no value.",
      " You are calling a method named reduce on an object that does not exist.",
      " You are calling a method named reduce on an empty array.",
      " You are calling a method named reduce on an object that's has a null value.**Explanation**: `You cannot invoke reduce on undefined object... It will throw (yourObject is not Defined...)`"
    ]
  },
  {
    "query": " Q43. How many prototype objects are in the chain for the following array",
    "answers": [" 3", " 2", " 0", " 1"]
  },
  {
    "query": " Q44. Which choice is _not_ a unary operator",
    "answers": [" typeof", " delete", " instanceof", " void"]
  },
  {
    "query": " Q47. Which keyword is used to create an error",
    "answers": [" throw", " exception", " catch", " error"]
  },
  {
    "query": " Q48. What's one difference between the async and defer attributes of the HTML script tag",
    "answers": [
      " The defer attribute can work synchronously.",
      " The defer attribute works only with generators.",
      " The defer attribute works only with promises.",
      " The defer attribute will asynchronously load the scripts in order."
    ]
  },
  {
    "query": " Q54. Which collection object allows unique value to be inserted only once",
    "answers": [" Object", " Set", " Array", " Map"]
  },
  {
    "query": " Q56. How does the `forEach()` method differ from a `for` statement",
    "answers": [
      " forEach allows you to specify your own iterator, whereas for does not.",
      " forEach can be used only with strings, whereas for can be used with additional data types.",
      " forEach can be used only with an array, whereas for can be used with additional data types.",
      " for loops can be nested; whereas forEach loops cannot."
    ]
  },
  {
    "query": " Q57. Which choice is an incorrect way to define an arrow function that returns an empty object",
    "answers": [" => ({})", " => {}", " => { return {};}", " => (({}))"]
  },
  {
    "query": " Q58. Why might you choose to make your code asynchronous",
    "answers": [
      " to start tasks that might take some time without blocking subsequent tasks from executing immediately",
      " to ensure that tasks further down in your code are not initiated until earlier tasks have completed",
      " to make your code faster",
      " to ensure that the call stack maintains a LIFO (Last in, First Out) structure**EXPLANATION:** \"to ensure that tasks further down in your code are not initiated until earlier tasks have completed\" you use the normal (synchronous) flow where each command is executed sequentially. Asynchronous code allows you to break this sequence: start a long running function (AJAX call to an external service) and continue running the rest of the code in parallel."
    ]
  },
  {
    "query": " Q59. Which expression evaluates to true",
    "answers": [" `[3] == [3]`", " `3 == '3'`", " `3 != '3'`", " `3 === '3'`"]
  },
  {
    "query": " Q60. Which of these is a valid variable name",
    "answers": [" 5thItem", " firstName", " grand total", " function"]
  },
  {
    "query": " Q61. Which method cancels event default behavior",
    "answers": [" cancel()", " stop()", " preventDefault()", " prevent()"]
  },
  {
    "query": " Q62. Which method do you use to attach one DOM node to another",
    "answers": [
      " attachNode()",
      " getNode()",
      " querySelector()",
      " appendChild()"
    ]
  },
  {
    "query": " Q63. Which statement is used to skip iteration of the loop",
    "answers": [" break", " pass", " skip", " continue"]
  },
  {
    "query": " Q64. Which choice is valid example for an arrow function",
    "answers": [
      " (a,b) => c",
      " a, b => {return c;}",
      " a, b => c",
      " { a, b } => c"
    ]
  },
  {
    "query": " Q65. Which concept is defined as a template that can be used to generate different objects that share some shape and/or behavior",
    "answers": [" class", " generator function", " map", " proxy"]
  },
  {
    "query": " Q66. How do you add a comment to JavaScript code",
    "answers": [
      " `! This is a comment`",
      " `# This is a comment`",
      " `\\\\ This is a comment`",
      " `// This is a comment`"
    ]
  },
  {
    "query": " Q67. If you attempt to call a value as a function but the value is not a function, what kind of error would you get",
    "answers": [" TypeError", " SystemError", " SyntaxError", " LogicError"]
  },
  {
    "query": " Q68. Which method is called automatically when an object is initialized",
    "answers": [" create()", " new()", " constructor()", " init()"]
  },
  {
    "query": " Q72. Which statement selects all img elements in the DOM tree",
    "answers": [
      " `Document.querySelector('img')`",
      " `Document.querySelectorAll('<img>')`",
      " `Document.querySelectorAll('img')`",
      " `Document.querySelector('<img>')`"
    ]
  },
  {
    "query": " Q73. Why would you choose an asynchronous structure for your code",
    "answers": [
      " To use ES6 syntax",
      " To start tasks that might take some time without blocking subsequent tasks from executing immediately",
      " To ensure that parsers enforce all JavaScript syntax rules when processing your code",
      " To ensure that tasks further down in your code aren't initiated until earlier tasks have completed"
    ]
  },
  {
    "query": " Q74. What is the HTTP verb to request the contents of an existing resource",
    "answers": [" DELETE", " GET", " PATCH", " POST"]
  },
  {
    "query": " Q75. Which event is fired on a text field within a form when a user tabs to it, or clicks or touches it",
    "answers": [" focus", " blur", " hover", " enter"]
  },
  {
    "query": " Q85. What is the difference between the map() and the forEach() methods on the Array prototype",
    "answers": [
      " There is no difference.",
      " The `forEach()` method returns a single output value, wheras the `map()` method performs operation on each value in the array.",
      " The map() methods returns a new array with a transformation applied on each item in the original array, wheras the `forEach()` method iterates through an array with noreturn value.",
      " The `forEach()` methods returns a new array with a transformation applied on each item in the original array, wheras the `map()` method iterates through an array with noreturn value."
    ]
  },
  {
    "query": " Q87. Which tag pair is used in HTML to embed JavaScript",
    "answers": [
      " `<script></script>`",
      " `<js></js>`",
      " `<javascript></javascript>`",
      " `<code></code>`"
    ]
  },
  {
    "query": " Q90. If your app receives data from a third-party API, which HTTP response header must the server specify to allow exceptions to the same-origin policy",
    "answers": [
      " Security-Mode",
      " Access-Control-Allow-Origin",
      " Different-Origin",
      " Same-Origin**Explanation:** https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"
    ]
  },
  {
    "query": " Q92. Which statement is applicable to the defer attribute of the HTML \\<script\\> tag",
    "answers": [
      " defer causes the script ta be loaded from the backup content delivery network (CDN).",
      " defer allows the browser ta continue processing the page while the script loads in the background.",
      " defer blacks the browser from processing HTML below the tag until the script is completely loaded.",
      " defer lazy loads the script, causing it to download only when it is called by another script on the page.**Explanation:** If the defer attribute is set, it specifies that the script is downloaded in parallel to parsing the page, and executed after the page has finished parsing. [HTML \\<script\\> defer Attribute](https://www.w3schools.com/tags/att_script_defer.asp)"
    ]
  },
  {
    "query": " Q99. How would you access the word It from this multidimensional array",
    "answers": [
      " `matrix[1[2]]`",
      " `matrix[1][1]`",
      " `matrix[1,2]`",
      " `matrix[1][2]`"
    ]
  },
  {
    "query": " Q104. Which choice is a valid example of an arrow function, assuming c is defined in the outer scope",
    "answers": [
      " `a, b => { return c; }`",
      " `a, b => c`",
      " `{ a, b } => c`",
      " `(a,b) => c`"
    ]
  },
  {
    "query": " Q108. Which method call is chained to handle a successful response returned by `fetch()`",
    "answers": [" `done()`", " `then()`", " `finally()`", " `catch()`"]
  },
  {
    "query": " Q109. Which choice is not an array method",
    "answers": [
      " `array.slice()`",
      " `array.shift()`",
      " `array.push()`",
      " `array.replace()`"
    ]
  },
  {
    "query": " Q110. Which JavaScript loop ensures that at least a singular iteration will happen",
    "answers": [" do…while", " forEach", " while", " for"]
  },
  {
    "query": " Q3. Review the code below. Which statement calls the addTax function and passes 50 as an argument",
    "code": "jsfunction addTax(total) {  return total * 1.05;}",
    "answers": [
      " addTax = 50;",
      " return addTax 50;",
      " addTax(50);",
      " addTax 50;"
    ]
  },
  {
    "query": " Q6. When would the final statement in the code shown be logged to the console",
    "code": "class Animal {  static belly = [];  eat () {    Animal.belly.push(\"food\");    }}let a = new Animal();a.eat();console.log(/* Snippet Here */); //Prints food",
    "answers": [
      " `a.prototype.belly[0]`",
      " `Object.getPrototype0f (a).belly[0]`",
      " `Animal.belly[0]`",
      " `a.belly[0]`"
    ]
  },
  {
    "query": " Q11. What is the result in the console of running the code shown",
    "code": "jsvar Storm = function () {};Storm.prototype.precip = 'rain';var WinterStorm = function () {};WinterStorm.prototype = new Storm();WinterStorm.prototype.precip = 'snow';var bob = new WinterStorm();console.log(bob.precip);",
    "answers": [" Storm()", " undefined", " 'rain'", " 'snow'"]
  },
  {
    "query": " Q13. What is the result in the console of running this code",
    "code": "js'use strict';function logThis() {  this.desc = 'logger';  console.log(this);}new logThis();",
    "answers": [" undefined", " window", " {desc: \"logger\"}", " function"]
  },
  {
    "query": " Q14. How would you reference the text 'avenue' in the code shown",
    "code": "jslet roadTypes = ['street', 'road', 'avenue', 'circle'];",
    "answers": [
      " roadTypes.2",
      " roadTypes\\[3\\]",
      " roadTypes.3",
      " roadTypes\\[2\\]"
    ]
  },
  {
    "query": " Q15. What is the result of running this statement",
    "code": "javascriptconsole.log(typeof 42);",
    "answers": [" 'float'", " 'value'", " 'number'", " 'integer'"]
  },
  {
    "query": " Q17. You're adding error handling to the code shown. Which code would you include within the if statement to specify an error message",
    "code": "jsfunction addNumbers(x, y) {  if (isNaN(x) || isNaN(y)) {  }}",
    "answers": [
      " exception('One or both parameters are not numbers')",
      " catch('One or both parameters are not numbers')",
      " error('One or both parameters are not numbers')",
      " throw('One or both parameters are not numbers')"
    ]
  },
  {
    "query": " Q20. What would be the result in the console of running this code",
    "code": "jsfor (var i = 0; i < 5; i++) {  console.log(i);}",
    "answers": [" 12345", " 1234", " 01234", " 012345"]
  },
  {
    "query": " Q22. What will be logged to the console",
    "code": "jsvar a = ['dog', 'cat', 'hen'];a[100] = 'fox';console.log(a.length);",
    "answers": [" 101", " 3", " 4", " 100"]
  },
  {
    "query": " Q24. What is the value of dessert.type after executing this code",
    "code": "jsconst dessert = { type: 'pie' };dessert.type = 'pudding';",
    "answers": [
      " pie",
      " The code will throw an error.",
      " pudding",
      " undefined"
    ]
  },
  {
    "query": " Q33. For the following class, how do you get the value of 42 from an instance of X",
    "code": "jsclass X {  get Y() {    return 42;  }}var x = new X();",
    "answers": [" x.get('Y')", " x.Y", " x.Y()", " x.get().Y"]
  },
  {
    "query": " Q34. What is the result of running this code",
    "code": "jssum(10, 20);diff(10, 20);function sum(x, y) {  return x + y;}let diff = function (x, y) {  return x - y;};",
    "answers": [
      " 30, ReferenceError, 30, -10",
      " 30, ReferenceError",
      " 30, -10",
      " ReferenceError, -10"
    ]
  },
  {
    "query": " Q38. What does the following expression evaluate to",
    "code": "js[] == [];",
    "answers": [" True", " undefined", " []", " False"]
  },
  {
    "query": " Q40. What will this code print",
    "code": "jsvar v = 1;var f1 = function () {  console.log(v);};var f2 = function () {  var v = 2;  f1();};f2();",
    "answers": [
      " 2",
      " 1",
      " Nothing - this code will throw an error.",
      " undefined"
    ]
  },
  {
    "query": " Q45. What type of scope does the end variable have in the code shown",
    "code": "javascriptvar start = 1;if (start === 1) {  let end = 2;}",
    "answers": [" conditional", " block", " global", " function"]
  },
  {
    "query": " Q46. What will the value of y be in this code:\n\n```js\nconst x = 6 % 2;\nconst y = x ",
    "code": "jsconst x = 6 % 2;const y = x ? 'One' : 'Two';",
    "answers": [" One", " undefined", " TRUE", " Two"]
  },
  {
    "query": " Q49. The following program has a problem. What is it",
    "code": "jsvar a;var b = (a = 3) ? true : false;",
    "answers": [
      " The condition in the ternary is using the assignment operator.",
      " You can't define a variable without initializing it.",
      " You can't use a ternary in the right-hand side of an assignment operator.",
      " The code is using the deprecated var keyword."
    ]
  },
  {
    "query": " Q50. Which statement references the DOM node created by the code shown",
    "code": "html<p class=\"pull\">lorem ipsum</p>",
    "answers": [
      " `Document.querySelector('class.pull')`",
      " `document.querySelector('.pull');`",
      " `Document.querySelector('pull')`",
      " `Document.querySelector('#pull')`"
    ]
  },
  {
    "query": " Q51. What value does this code return",
    "code": "jslet answer = true;if (answer === false) {  return 0;} else {  return 10;}",
    "answers": [" 10", " true", " false", " 0"]
  },
  {
    "query": " Q52. What is the result in the console of running the code shown",
    "code": "jsvar start = 1;function setEnd() {  var end = 10;}setEnd();console.log(end);",
    "answers": [" 10", " 0", " ReferenceError", " undefined"]
  },
  {
    "query": " Q53. What will this code log in the console",
    "code": "jsfunction sayHello() {  console.log('hello');}console.log(sayHello.prototype);",
    "answers": [
      " undefined",
      " \"hello\"",
      " an object with a constructor property",
      " an error message"
    ]
  },
  {
    "query": " Q55. What two values will this code print",
    "code": "jsfunction printA() {  console.log(answer);  var answer = 1;}printA();printA();",
    "answers": [
      " `1` then `1`",
      " `1` then `undefined`",
      " `undefined` then `undefined`",
      " `undefined` then `1`"
    ]
  },
  {
    "query": " Q69. What is the result of running the statement shown",
    "code": "javascriptlet a = 5;console.log(++a);",
    "answers": [" 4", " 10", " 6", " 5"]
  },
  {
    "query": " Q70. You've written the event listener shown below for a form button, but each time you click the button, the page reloads. Which statement would stop this from happening",
    "code": "javascriptbutton.addEventListener(  'click',  function (e) {    button.className = 'clicked';  },  false,);",
    "answers": [
      " e.blockReload();",
      " button.preventDefault();",
      " button.blockReload();",
      " e.preventDefault();"
    ]
  },
  {
    "query": " Q76. What is the result in the console of running this code",
    "code": "javascriptfunction logThis() {  console.log(this);}logThis();",
    "answers": [" function", " undefined", " Function.prototype", " window"]
  },
  {
    "query": " Q77. Which class-based component is equivalent to this function component",
    "code": "javascriptconst Greeting = ({ name }) => <h1>Hello {name}!</h1>;",
    "answers": [
      " `class Greeting extends React.Component { render() { return <h1>Hello {this.props.name}!</h1>; } }`",
      " `class Greeting extends React.Component { constructor() { return <h1>Hello {this.props.name}!</h1>; } }`",
      " `class Greeting extends React.Component { <h>Hello {this.props.name}!</h>; } }`",
      " `class Greeting extends React.Component { render({ name }) { return <h1>Hello {name}!</h1>; } }`"
    ]
  },
  {
    "query": " Q78. Which class-based lifecycle method would be called at the same time as this effect Hook",
    "code": "javascriptuseEffect(() => {  // do things}, []);",
    "answers": [
      " componentWillUnmount",
      " componentDidUpdate",
      " render",
      " componentDidMount"
    ]
  },
  {
    "query": " Q79. What is the output of this code",
    "code": "javascriptvar obj;console.log(obj);",
    "answers": [
      " ReferenceError: obj is not defined",
      " {}",
      " undefined",
      " null"
    ]
  },
  {
    "query": " Q80. How would you use the TaxCalculator to determine the amount of tax on \\$50",
    "code": "javascriptclass TaxCalculator {  static calculate(total) {    return total * 0.05;  }}",
    "answers": [
      " calculate(50);",
      " new TaxCalculator().calculate(\\$50);",
      " TaxCalculator.calculate(50);",
      " new TaxCalculator().calculate(50);"
    ]
  },
  {
    "query": " Q81. What is wrong with this code",
    "code": "jsconst foo = {  bar() {    console.log('Hello, world!');  },  name: 'Albert',  age: 26,};",
    "answers": [
      " The function bar needs to be defined as a key/value pair.",
      " Trailing commas are not allowed in JavaScript.",
      " Functions cannot be declared as properties of objects.",
      " Nothing, there are no errors."
    ]
  },
  {
    "query": " Q83. What will this code log to the console",
    "code": "jsconst foo = [1, 2, 3];const [n] = foo;console.log(n);",
    "answers": [
      " 1",
      " undefined",
      " NaN",
      " Nothing--this is not proper JavaScript syntax and will throw an error."
    ]
  },
  {
    "query": " Q84. How do you remove the property name from this object",
    "code": "jsconst foo = {  name: 'Albert',};",
    "answers": [
      " delete name from foo;",
      " delete foo.name;",
      " del foo.name;",
      " remove foo.name;"
    ]
  },
  {
    "query": " Q86. Which concept does this code illustrate",
    "code": "jsfunction makeAdder(x) {  return function (y) {    return x + y;  };}var addFive = makeAdder(5);console.log(addFive(3));",
    "answers": [" overloading", " closure", " currying", " overriding"]
  },
  {
    "query": " Q88. What would be the result in the console of running this code",
    "code": "jsfor (var i = 0; i < 5; i++) {  console.log(i);}",
    "answers": [" 0 1 2 3 4", " 0 1 2 3 4 5", " 1 2 3 4", " 1 2 3 4 5"]
  },
  {
    "query": " Q89. What is the value of dessert.type after executing this code",
    "code": "jsconst dessert = { type: 'pie' };dessert.type = 'pudding';const seconds = dessert;seconds.type = 'fruit';",
    "answers": [
      " pie",
      " fruit",
      " undefined",
      " pudding**Explanation:** `Assigning a variable (such as seconds) to an object (such as dessert) does not create a new object. The seconds variable merely becomes a reference for the dessert object. Any changes made to seconds will also reflect in dessert.`"
    ]
  },
  {
    "query": " Q91. What will be logged to the console",
    "code": "js'use strict';function logThis() {  this.desc = 'logger';  console.log(this);}new logThis();",
    "answers": [" window", " undefined", " function", " {desc: \"logger\"}"]
  },
  {
    "query": " Q93. What will this code print",
    "code": "jslet rainForests = ['Amazon', 'Borneo', 'Cerrado', 'Congo'];rainForests.splice(0, 2);console.log(rainForests);",
    "answers": [
      " `[\"Amazon\",\"Borneo\",\"Cerrado\",\"Congo\"]`",
      " `[\"Cerrado\", \"Congo\"]`",
      " `[\"Congo\"]`",
      " `[\"Amazon\",\"Borneo\"]`"
    ]
  },
  {
    "query": " Q94. Which missing line would allow you to create five variables(one,two,three,four,five) that correspond to their numerical values (1,2,3,4,5)",
    "code": "jsconst numbers = [1, 2, 3, 4, 5];//MISSING LINE",
    "answers": [
      " `const [one,two,three,four,five]=numbers`",
      " `const {one,two,three,four,five}=numbers`",
      " `const [one,two,three,four,five]=[numbers]`",
      " `const {one,two,three,four,five}={numbers}`"
    ]
  },
  {
    "query": " Q95.\n\n```js\nconst obj = {\n  a: 1,\n  b: 2,\n  c: 3,\n};\n\nconst obj2 = {\n  ...obj,\n  a: 0,\n};\n\nconsole.log(obj2.a, obj2.b);\n```\n\n- [ ] Nothing, it will throw an error\n- [x] 0 2\n- [ ] undefined 2\n- [ ] undefined 2\n\n[Reference spread syntax es6](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_syntax)\n\n### Q96. Which line could you add to this code to print \"jaguar\" to the console",
    "code": "let animals = [\"jaguar\",\"eagle\"];//Missing Lineconsole.log(animals.pop()); //Prints jaguar",
    "answers": [
      " `animals.filter(e => e === \"jaguar\");`",
      " `animals.reverse();`",
      " `animals.shift();`",
      " `animals.pop();`"
    ]
  },
  {
    "query": " Q97. What line is missing from this code",
    "code": "js//Missing Linefor (var i = 0; i < vowels.length; i++) {  console.log(vowels[i]);  //Each letter printed on a separate line as follows;  //a  //e  //i  //o  //u}",
    "answers": [
      " `let vowels = \"aeiou\".toArray();`",
      " `let vowels = Array.of(\"aeiou\");`",
      " `let vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"};`",
      " `let vowels = \"aeiou\";`"
    ]
  },
  {
    "query": " Q98. What will be logged to the console",
    "code": "jsconst x = 6 % 2;const y = x ? 'One' : 'Two';console.log(y);",
    "answers": [" undefined", " One", " true", " Two"]
  },
  {
    "query": " Q100. What does this code do",
    "code": "jsconst animals = ['Rabbit', 'Dog', 'Cat'];animals.unshift('Lizard');",
    "answers": [
      " It adds \"Lizard\" to the start of the animals array.",
      " It adds \"Lizard\" to the end of the animals array.",
      " It replaces \"Rabbit\" with \"Lizard\" in the animals array.",
      " It replaces \"Cat\" with \"Lizard\" in the animals array."
    ]
  },
  {
    "query": " Q101. What is the output of this code",
    "code": "jslet x = 6 + 3 + '3';console.log(x);",
    "answers": [" 93", " 12", " 66", " 633"]
  },
  {
    "query": " Q102. Which statement can take a single expression as input and then look through a number of choices until one that matches that value is found",
    "code": "var sound = \"grunt\";var bear = {  sound: \"roar\"  };function roar() {  console.log(this.sound);}",
    "answers": [
      " `bear.bind(roar);`",
      " `roar.bind(bear);`",
      " `roar.apply(bear);`",
      " `bear[roar]();`"
    ]
  },
  {
    "query": " Q105. Which code would you use to access the Irish flag",
    "code": "javascriptvar flagsJSON =  '{ \"countries\" : [' +  '{ \"country\":\"Ireland\" , \"flag\":\"🇮🇪\" },' +  '{ \"country\":\"Serbia\" , \"flag\":\"🇷🇸\" },' +  '{ \"country\":\"Peru\" , \"flag\":\"🇵🇪\" } ]}';var flagDatabase = JSON.parse(flagsJSON);",
    "answers": [
      " flagDatabase.countries[0].flag",
      " flagDatabase.countries[1].flag",
      " flagsJSON.countries[0].flag",
      " flagDatabase[1].flag"
    ]
  },
  {
    "query": " Q106. Which statement correctly imports this code from some-file.js",
    "code": "js//some-file.jsexport const printMe = (str) => console.log(str);",
    "answers": [
      " `import printMe from './some-file';`",
      " `import { printMe } from './some-file';`",
      " `import default as printMe from './some-file';`",
      " `const printMe = import './some-file';`"
    ]
  },
  {
    "query": " Q111. What will be logged to the console",
    "code": "javascriptconsole.log(typeof 'blueberry');",
    "answers": [" string", " array", " Boolean", " object"]
  },
  {
    "query": " Q112. What is the output that is printed when the div containing the text \"Click Here\" is clicked",
    "code": "javascript//JavaScriptdocument.querySelectorAll('div').forEach((e) => {  e.onclick = (e) => console.log(e.currentTarget.id);});",
    "answers": [" C B A", " A", " C", " A B C"]
  }
]
