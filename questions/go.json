[{"query":" Q1. What do you need for two functions to be the same type?","options":["They should share the same signatures, including parameter types and return types.","They should share the same parameter types but can return different types.","All functions should be the same type.","The functions should not be a first class type."],"correctAns":1},{"query":" Q2. What does the `len()` function return if passed a UTF-8 encoded string?","options":["the number of characters","the number of bytes","It does not accept string types.","the number of code points"],"correctAns":2},{"query":" Q3. Which is _not_ a valid loop construct in Go?","options":["`do { ... } while i < 5`","`for _,c := range \"hello\" { ... }`","`for i := 1; i < 5; i++ { ... }`","`for i < 5 { ... }`"],"correctAns":1},{"query":" Q4. How will you add the number 3 to the right side?","options":["`values.append(3)`","`values.insert(3, 3)`","`append(values, 3)`","`values = append(values, 3)`"],"correctAns":4},{"query":" Q5. What is the value of `Read`?","code":"go\r\nconst (\r\n  Write = iota\r\n  Read\r\n  Execute\r\n)\r\n","options":["0","1","2","a random value"],"correctAns":2},{"query":" Q6. Which is the _only_ valid import statement in Go?","options":["`import \"github/gin-gonic/gin\"`","`import \"https://github.com/gin-gonic/gin\"`","`import \"../template\"`","`import \"github.com/gin-gonic/gin\"`"],"correctAns":4},{"query":" Q7. What would happen if you attempted to compile and run this Go program?","code":"go\r\npackage main\r\nvar GlobalFlag string\r\nfunc main() {\r\n  print(\"[\"+GlobalFlag+\"]\")\r\n}\r\n","options":["It would not compile because `GlobalFlag` was never initialized.","It would compile and print `[]`.","It would compile and print nothing because `\"[\" +nil+\"]\"` is also `nil`.","It would compile but then panic because `GlobalFlag` was never initialized."],"correctAns":2},{"query":" Q8. From where is the variable `myVar` accessible if it is declared outside of any functions in a file in package `myPackage` located inside module `myModule`?","options":["It can be accessed anywhere inside `myPackage`, not the rest of myModule.","It can be accessed by any application that imports `myModule`.","It can be accessed from anywhere in `myModule`.","It can be accessed by other packages in `myModule` as long as they import `myPackage`"],"correctAns":1},{"query":" Q9. How do you tell `go test` to print out the tests it is running?","options":["`go test`","`go test -x`","`go test --verbose`","`go test -v`"],"correctAns":4},{"query":" Q10. This code printed `{0, 0}`. How can you fix it?","code":"go\r\ntype Point struct {\r\n  x int\r\n  y int\r\n}\r\n\r\nfunc main() {\r\n  data := []byte(`{\"x\":1, \"y\": 2}`)\r\n  var p Point\r\n  if err := json.Unmarshal(data, &p); err != nil {\r\n    fmt.Println(\"error: \", err)\r\n  } else {\r\n    fmt.Println(p)\r\n  }\r\n}\r\n","options":["use `json.Decoder`","Pass a pointer to `data`","Make `X` and `Y` exported (uppercase)","Use field tags"],"correctAns":3},{"query":" Q11. What does a `sync.Mutex` block white it is locked?","options":["all goroutines","any other call to lock that `Mutex`","any reads or writes of the variable it is locking","any writes to the variable it is locking"],"correctAns":2},{"query":" Q12. What is an idiomatic way to pause execution of the current scope until an arbitrary number of goroutines have returned?","options":["Pass an `int` and `Mutex` to each and count when they return.","Loop over a `select` statement.","Sleep for a safe amount of time.","`sync.WaitGroup`"],"correctAns":4},{"query":" Q13. What is a side effect of using `time.After` in a `select` statement?","options":["It blocks the other channels.","It is meant to be used in select statements without side effects.","It blocks the `select` statement until the time has passed.","The goroutine does not end until the time passes.\r\n\r\nNote: it doesn't block `select` and does not block other channels."],"correctAns":2},{"query":" Q14. What is the select statement used for?","options":["executing a function concurrently","executing a different case based on the type of a variable","executing a different case based on the value of a variable","executing a different case based on which channel returns first"],"correctAns":4},{"query":" Q15. According to the Go documentation standard, how should you document this function?","code":"go\r\nfunc Add(a, b int) {\r\n  return a + b\r\n}\r\n","options":["go\r\n// Calculate a + b\r\n// - a: int\r\n// - b: int\r\n// - returns: int\r\nfunc Add(a, b int) {\r\n  return a + b\r\n}","go\r\n// Does a + b\r\nfunc Add(a, b int) {\r\n  return a + b\r\n}","go\r\n// Add returns the sum of a and b\r\nfunc Add(a, b int) {\r\n  return a + b\r\n}","go\r\n// returns the sum of a and b\r\nfunc Add(a, b int) {\r\n  return a + b\r\n}"],"correctAns":3},{"query":" Q16. What restriction is there on the type of `var` to compile this `i := myVal.(int)?`","options":["`myVal` must be an integer type, such as `int`, `int64`, `int32`, etc.","`myVal` must be able to be asserted as an `int`.","`myVal` must be an interface.","`myVal` must be a numeric type, such as `float64` or `int64`."],"correctAns":3},{"query":" Q17. What is a channel?","options":["a global variable","a medium for sending values between goroutines","a dynamic array of values","a lightweight thread for concurrent programming"],"correctAns":2},{"query":" Q18. How can you make a file build only on Windows?","options":["Check runtime.GOOS.","Add a // +build windows comment anywhere in the file.","Add a \\_ prefix to the file name.","Add a // +build windows comment at the top of the file."],"correctAns":4},{"query":" Q19. What is the correct way to pass this as a body of an HTTP POST request?","code":"go\r\ndata := \"A group of Owls is called a parliament\"\r\n","options":["resp, err := http.Post(\"https://httpbin.org/post\", \"text/plain\", []byte(data))","resp, err := http.Post(\"https://httpbin.org/post\", \"text/plain\", data)","resp, err := http.Post(\"https://httpbin.org/post\", \"text/plain\", strings.NewReader(data))","resp, err := http.Post(\"https://httpbin.org/post\", \"text/plain\", &data)"],"correctAns":3},{"query":" Q20. What should the idiomatic name be for an interface with a single method and the signature `Save() error`?","options":["Saveable","SaveInterface","ISave","Saver"],"correctAns":4},{"query":" Q21. A `switch` statement **\\_** its own lexical block. Each `case` statement **\\_** an additional lexical block.","options":["does not create; creates","does not create; does not create","creates; creates","creates; does not create"],"correctAns":3},{"query":" Q22. What is the default case sensitivity of the JSON `Unmarshal` function?","options":["The default behavior is case insensitive, but it can be overridden.","Fields are matched case sensitive.","Fields are matched case insensitive.","The default behavior is case sensitive, but it can be overridden."],"correctAns":1},{"query":" Q23. What is the difference between the `time` packageâ€™s `Time.Sub()` and `Time.Add()` methods?","options":["Time.Add() is for performing addition while Time.Sub() is for nesting timestamps.","Time.Add() always returns a later time while time.Sub always returns an earlier time.","They are opposites. Time.Add(x) is the equivalent of Time.Sub(-x).","Time.Add() accepts a Duration parameter and returns a Time while Time.Sub() accepts a Time parameter and returns a Duration."],"correctAns":4},{"query":" Q24. What is the risk of using multiple field tags in a single struct?","options":["Every field must have all tags to compile.","It tightly couples different layers of your application.","Any tags after the first are ignored.","Missing tags panic at runtime."],"correctAns":2},{"query":" Q25. Where is the built-in recover method useful?","options":["in the main function","immediately after a line that might panic","inside a deferred function","at the beginning of a function that might panic"],"correctAns":3},{"query":" Q26. Which choice does _not_ send output to standard error?","options":["println(message)","log.New(os.Stderr, \"\", 0).Println(message)","fmt.Errorf(\"%s\\n\", message)","fmt.Fprintln(os.Stderr, message)"],"correctAns":1},{"query":" Q27. How can you tell Go to import a package from a different location?","options":["Use a proxy.","Change the import path.","Use a replace directive in go.mod.","Use a replace directory."],"correctAns":3},{"query":" Q28. If your current working directory is the top level of your project, which command will run all its test packages?","options":["go test all","go run --all","go test .","go test ./..."],"correctAns":4},{"query":" Q29. Which encodings can you put in a string?","options":["any, it accepts arbitary bytes","any Unicode format","UTF-8 or ASCII","UTF-8"],"correctAns":4},{"query":" Q31. What does `log.Fatal` do?","options":["It raises a panic.","It prints the log and then raises a panic.","It prints the log and then safely exits the program.","It exits the program."],"correctAns":3},{"query":" Q32. Which is a valid Go time format literal?","options":["\"2006-01-02\"","\"YYYY-mm-dd\"","\"y-mo-d\"","\"year-month-day"],"correctAns":1},{"query":" Q36. What will be the output of this code?","code":"\r\nch := make(chan int)\r\nch <- 7\r\nval := <-ch\r\nfmt.Println(val)\r\n","options":["0","It will deadlock","It will not compile","2.718"],"correctAns":2},{"query":" Q37. What will be the output of this program?","code":"\r\nch := make(chan int)\r\nclose(ch)\r\nval := <-ch\r\nfmt.Println(val)\r\n","options":["It will deadlock","It will panic","0","NaN"],"correctAns":3},{"query":" Q38. What will be printed in this code?","code":"\r\nvar stocks map[string]float64 // stock -> price\r\nprice := stocks[\"MSFT\"]\r\nfmt.Println(\"%f\\n\", price)\r\n","options":["0","0.000000","The code will panic","NaN"],"correctAns":1},{"query":" Q39. What is the common way to have several executables in your project?","options":["Have a cmd directory and a directory per executable inside it.","Comment out main.","Use build tags.","Have a pkg directory and a directory per executable inside it."],"correctAns":4},{"query":" Q40. How is the behavior of ```t.Fatal``` different inside a ```t.Run``` ?","code":"t.Fatal","options":["t.Fatal","t.Fatal","t.Fatal","There is no difference."],"correctAns":2}]