[{"query":"Which version onwards did Git offer reversing a file back to what it looked like when last committed?","options":["1.7","1.6","2.0","1.8"],"correctAns":2},{"query":"Which strategy is used by Git for merging two branches?","options":["LIFO","recursive","FIFO","octopus"],"correctAns":2},{"query":"What does refs store?","options":["SHA-1 value","None of these","Branch name","Project name"],"correctAns":1},{"query":"What Language is used in GIT?","options":["C","C++","C#","Java"],"correctAns":1},{"query":"What is usually the extension of file which has the public key?","options":["ssh","pub","key","pk"],"correctAns":2},{"query":"What is the difference between initializing a normal repo and a bare repo?","options":["Bare repos store their git history in a .git subfolder.","Bare repos do not have the .git extension.","Bare repos do not come with working or checked-out source files.","Bare repos should be used for local rather than remote repos."],"correctAns":3},{"query":"How many individual commits can a single repository have?","options":["any number of commits","only one commit local per repository","only three commits per branch","only one commit per HEAD"],"correctAns":1},{"query":"What types of tags does Git support?","options":["heavy and concise","lightweight and immutable","heavy and annotated","lightweight and annotated"],"correctAns":4},{"query":"After staging a series of changes to the index, which command could you use to review them prior to a commit?","options":["git diff --cached","git diff","git diff --HEAD","git status -v -v"],"correctAns":1},{"query":"What does the git stash drop command do?","options":["removes the most recent stash entry","deletes the stash","lists everything in the stash","throws away the oldest entry"],"correctAns":1},{"query":"What command creates a new branch from the currently checked-out branch?","options":["`git -b checkout <nameOfBranch>`","`git branch`","`git checkout <nameOfBranch>`","`git checkout -b <nameOfBranch>`"],"correctAns":4},{"query":"After mistakenly staging a file named myFile to the index, how would you remove it from the index to exclude it from your next commit?","options":["Use git reset HEAD^.","Use git reset myFile.txt.","Use git -rm myFile.txt.","Use git reset."],"correctAns":2},{"query":"What happens if you run this command from your master branch?","code":"bash\r\ngit checkout -b beta-test","options":["The beta-test branch will be checked out of the current commit.","The beta-test branch will be checked out and deleted.","A new branch called beta-test will be created and switched to.","The beta-test branch will be merged with the master branch."],"correctAns":3},{"query":"How does Git internally manage branches?","options":["by creating a pointer to the most recent snapshot/commit for the branch.","by creating a data array of branches in the same repository.","by creating a data dictionary of code changes.","be creating a debug log that stores repository changes."],"correctAns":1},{"query":"You want to perform a git reset but cannot recall all of the available options. What command would you use to see a description of them?","options":["git help reset","git -h reset","git options reset","git reset help"],"correctAns":1},{"query":"What is a remote repository?","options":["a version of the repository that mirrors changes made in the local repository's master branch for open-source collaboration efforts","the lead repository elected by the Git arbitrator found within local repositories of collaborating team members","a read-only version of the repository stored on a backup server in case local repositories become lost or corrupted","a version of the repository hosted on the internet or network that is pushed to or pulled from by collaborators"],"correctAns":4},{"query":"After modifying some existing files in a repository, you decide to discard the changes. What command can you use?","options":["git restore","git undo","git clean","git checkout"],"correctAns":4},{"query":"After starting to merge a feature branch into your master branch, you encounter a merge conflict and decide you do not want to perform the merge. How can you stop the merge and restore to the pre-merge state?","options":["Use git restore -p.","Use git merge -u.","Use git merge --abort.","Use git merge --undo."],"correctAns":3},{"query":"If you have several commits for a single feature, what is the most efficient way to restructure your commit history?","options":["Use git stash to consolidate the commits under a new hash.","Use git squash to consolidate the commits together into a single coherent commit.","Delete the task commits and recommit with a new message.","Use git cherry-pick to place the commits in another branch."],"correctAns":2},{"query":"Which command correctly creates a lightweight tag?","options":["`git tag v3.8.1`","`git tag --light \"v3.8.1\"`","`git tag v3.8.1 —-annotate -m \"<tagMessage>\"`","`git tag -l v3.8.1`"],"correctAns":1},{"query":"What is the main issue with using git rebase when working with multiple developers?","options":["Rebase affects only your repository and creates a diff in the master branch.","Rebase creates a temporary copy of the master branch in the remote repo.","Rebase moves the HEAD of the remote master branch one commit forward.","Rebase deletes all commit history for the new feature branch."],"correctAns":4},{"query":"What Git workflow is used by teams that collaborate on a single branch and avoid creating long-lived development branches?","options":["Git flow","Mainline flow","Trunk-Based Development","GitHub flow"],"correctAns":3},{"query":"Which option on the git log command allows you to limit output to commits made after certain data?","options":["`--since`","`--sinceWhen`","`-<n>`","`--afterDate`"],"correctAns":1},{"query":"How would you delete unreachable objects older than a specified time from your project database?","options":["`git cache --obsolete <time>`","`git branch --rebase <time>`","`git delete --inert <time>`","`git prune --expire <time>`"],"correctAns":4},{"query":"What conflicts can occur when forcing a push after rebasing?","options":["The remote master branch could have existing changes overwritten.","The origin URL will be reset to its default value.","The current HEAD will be deleted and can't be reinstated.","Nothing, it's common practice to force a push after rebasing."],"correctAns":1},{"query":"How does this command alter the currently checked-out branch?","options":["It resets the working branch to the first commit.","It sets HEAD to previous commit and leaves changes from the undone commit in the stage/index.","It deletes all previous commits and resets the repository history back to its initial state.","It keeps the HEAD at the current commit, but clears all previous commits."],"correctAns":2},{"query":"What is the difference between Git and SVN?","options":["Git works only on Linux, while SVN works on all operating systems.","SVN works only on Linux, while Git works on all operating systems.","SVN is a centralized system, while Git is a distributed system.","Git a centralized system, while SVN is a distributed system."],"correctAns":3},{"query":"This command is an example of what kind of tag?","options":["verbose","annotated","lightweight","deferred"],"correctAns":2},{"query":"What is the difference between a soft reset (`git reset --soft`) and a hard reset (`git reset –hard`) ?","options":["A soft reset only changes the commit that HEAD points to, while a hard reset resets the index and working tree to match the specified commit, discarding any changes.","A soft reset caches the old HEAD pointer, while a hard reset deletes it entirely.","A hard reset changes only where the HEAD is pointing, while a soft reset changes the HEAD and index.","A hard reset caches the old HEAD pointer, while a soft reset deletes it entirely."],"correctAns":1},{"query":"What information does the git config file store?","options":["shell scripts and flags","keychain and account information","local and global repository options","pre-compile scripts and settings"],"correctAns":3},{"query":"What is version control?","options":["a type of architecture used to manage large databases","a system that shows, tracks, and controls changes to a set of files over time","a programmatic design pattern used to manage code between multiple engineering teams","a type of software that links a project with a GitHub repository"],"correctAns":2},{"query":"What is the difference between using the git stash and git stash pop commands?","options":["git stash removes a commit from the repo history, while git stash pop saves changes to multiple branches.","git stash saves changes to multiple branches, while git stash pop removes a commit from the repo history.","git stash removes the most recent commit, while git stash pop saves current changes.","git stash creates a stash entry, while git stash pop places the saved state onto the working directory."],"correctAns":4},{"query":"Which command can be used to list the branches that have been merged into the currently checked-out branch?","options":["git master --status","git branch --status","git branch --merged","git status --merged"],"correctAns":3},{"query":"How would you configure Git to abort a commit if a smoke test script fails?","options":["Create a post-commit shell script that triggers the action.","Create a post-commit hook to trigger the script.","Create a pre-commit hook to trigger the script.","Create a pre-commit shell script that triggers the action."],"correctAns":3},{"query":"Which use case is NOT a good candidate for a Git hook?","options":["state dependent environment changes","continuous integration","increasing code coverage","enforcing commit rules"],"correctAns":1},{"query":"After starting to work on a new feature and creating new files in the working directory related to it, the customer determined the feature was no longer required. What command can be used to remove the untracked files from the working directory ?","options":["`git clean -f`","`git rm .`","`git reset HEAD`","`git checkout .`"],"correctAns":1},{"query":"What information do Git reflogs (reference logs) store?","options":["shell script pointers and keychain credentials","updates to branch tips and other references in the local repository","release notes and hook script values","tag and versioning information"],"correctAns":2},{"query":"You have just completed rebasing your master branch and need to manually update the remote master, even though there is a merge conflict. How can you accomplish this?","options":["`git push --overwrite`","`git push --update`","`git push --assert`","`git push --force-with-lease`"],"correctAns":4},{"query":"What is the difference between `git fetch` amd `git pull`","options":["`git fetch` creates a new branch off the master branch, while `git pull` creates a new branch off the local repository's master branch.","`git pull` downloads new data from a remote repository without integrating it into local files, while `git fetch` updates the current HEAD branch with the latest changes from the remote server.","`git fetch` updates remote tracking branches with changes from a remote repository, while `git pull` updates remote tracking branches with changes from a remote repository and merges them into their corresponding local branches.","`git fetch` downloads and merges data from the local repository, while `git pull` informs your colleagues you are about to make changes to the master branch."],"correctAns":3},{"query":"What command displays the difference between the working tree and the stage/index area, as well as files not tracked by Git?","options":["`git current`","`git status`","`git local`","`git context`"],"correctAns":2},{"query":"Your current repository has three branches: master, beta, and push-notifications. You have just finished the notification feature and commit the changes to the push-notification branch, and you want to include them in the beta branch. How can you accomplish this?","options":["Check out the beta branch and run git merge push-notifications.","Check out the push-notifications branch and run git merge beta.","Check out the master branch and run git merge beta -> push-notifications.","Delete the push-notifications branch; it will be committed to the master branch automatically."],"correctAns":1},{"query":"You would like to restore some previously stashed work to a new branch. How can you do that?","options":["Use git branch <stash hash>.","Add the stashed commits to the current commit, then create a new branch.","Use git checkout -b.","Run git stash branch <branch name>."],"correctAns":4},{"query":"What is the difference between git branch -d and git branch -D?","options":["-D deletes the local branch, while -d deletes the branch regardless of push and merge status.","-d deletes the current commit head, while -D deletes the entire branch.","-d deletes the local branch, while -D deletes the local branch regardless of push and merge status.","-D deletes the current commit head, while -d deletes the entire branch."],"correctAns":3},{"query":"You stashed three sets of changes but cannot remember the contents of the first stash entry. What command would you use to see the details of the changes in the first of the three stash entries?","options":["git stash show -p stash@{2}","git stash list","git stash show -p stash@{1}","git stash show -p"],"correctAns":1},{"query":"Which statement is true of the git push command?","options":["By default, a push doesn't send tags to the remote repository.","Only annotated tags are automatically pushed to the remote repository with a commit.","Tags are pushed to the remote repository with their respective commits.","Commits can be tagged only when they are created."],"correctAns":1},{"query":"How would you delete a remote branch in your repository?","options":["Use `git --delete <branch_name>`.","Use `git push <remote_name> --d <branch_name>`.","Use `git push <remote_name> --D`.","Use `git push <remote_name> --delete <branch_name>`."],"correctAns":4},{"query":"What is the default setting of `git reflog` when no subcommands are specified?","options":["delete","expire","show","update"],"correctAns":3}]