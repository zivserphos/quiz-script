[
  {
    "query": " Q1. If you want to import just the Component from the React library, what syntax do you use",
    "answers": [
      " `import React.Component from 'react'`",
      " `import [ Component ] from 'react'`",
      " `import Component from 'react'`",
      " `import { Component } from 'react'`"
    ],
    "correctAns": 4
  },
  {
    "query": " Q2. If a function component should always render the same way given the same props, what is a simple performance optimization available for it",
    "answers": [
      " Wrap it in the `React.memo` higher-order component.",
      " Implement the `useReducer` Hook.",
      " Implement the `useMemo` Hook.",
      " Implement the `shouldComponentUpdate` lifecycle method."
    ],
    "correctAns": 1
  },
  {
    "query": " Q4. If you see the following import in a file, what is being used for state management in the component",
    "answers": [
      " React Hooks",
      " stateful components",
      " math",
      " class components"
    ],
    "correctAns": 1
  },
  {
    "query": " Q6. What is the testing library most often associated with React",
    "answers": [" Mocha", " Chai", " Sinon", " Jest"],
    "correctAns": 4
  },
  {
    "query": " Q8. How do you handle passing through the component tree without having to pass props down manually at every level",
    "answers": [
      " React Send",
      " React Pinpoint",
      " React Router",
      " React Context"
    ],
    "correctAns": 4
  },
  {
    "query": " 10. What is the name of the tool used to take JSX and turn it into createElement calls",
    "answers": [" JSX Editor", " ReactDOM", " Browser Buddy", " Babel"],
    "correctAns": 4
  },
  {
    "query": " 11. Why might you use useReducer over useState in a React component",
    "answers": [
      " when you want to replace Redux",
      " when you need to manage more complex state in an app",
      " when you want to improve performance",
      " when you want to break your production app"
    ],
    "correctAns": 2
  },
  {
    "query": " 18. What can you use to handle code splitting",
    "answers": [
      " `React.memo`",
      " `React.split`",
      " `React.lazy`",
      " `React.fallback`"
    ],
    "correctAns": 3
  },
  {
    "query": " 19. When do you use `useLayoutEffect`",
    "answers": [
      " to optimize for all devices",
      " to complete the update",
      " to change the layout of the screen",
      " when you need the browser to paint before the effect runs"
    ],
    "correctAns": 4
  },
  {
    "query": " 22. When might you use `React.PureComponent`",
    "answers": [
      " when you do not want your component to have props",
      " when you have sibling components that need to be compared",
      " when you want a default implementation of `shouldComponentUpdate()`",
      " when you do not want your component to have state"
    ],
    "correctAns": 3
  },
  {
    "query": " 23. Why is it important to avoid copying the values of props into a component's state where possible",
    "answers": [
      " because you should never mutate state",
      " because `getDerivedStateFromProps()` is an unsafe method to use",
      " because you want to allow a component to update in response to changes in the props",
      " because you want to allow data to flow back up to the parent"
    ],
    "correctAns": 3
  },
  {
    "query": " 24. What is the children prop",
    "answers": [
      " a property that adds child components to state",
      " a property that lets you pass components as data to other components",
      " a property that lets you set an array as a property",
      " a property that lets you pass data to child elements"
    ],
    "correctAns": 2
  },
  {
    "query": " 25. Which attribute do you use to replace innerHTML in the browser DOM",
    "answers": [
      " injectHTML",
      " dangerouslySetInnerHTML",
      " weirdSetInnerHTML",
      " strangeHTML"
    ],
    "correctAns": 2
  },
  {
    "query": " 26. Which of these terms commonly describe React applications",
    "answers": [" declarative", " integrated", " closed", " imperative"],
    "correctAns": 1
  },
  {
    "query": " 27. When using webpack, why would you need to use a loader",
    "answers": [
      " to put together physical file folders",
      " to preprocess files",
      " to load external data",
      " to load the website into everyone's phone"
    ],
    "correctAns": 2
  },
  {
    "query": " 28. A representation of a user interface that is kept in memory and is synced with the \"real\" DOM is called what",
    "answers": [" virtual DOM", " DOM", " virtual elements", " shadow DOM"],
    "correctAns": 1
  },
  {
    "query": " Q30. To create a constant in JavaScript, which keyword do you use",
    "answers": [" const", " let", " constant", " var"],
    "correctAns": 1
  },
  {
    "query": " Q31. What do you call a React component that catches JavaScript errors anywhere in the child component tree",
    "answers": [
      " error bosses",
      " error catchers",
      " error helpers",
      " error boundaries"
    ],
    "correctAns": 4
  },
  {
    "query": " Q32. In which lifecycle method do you make requests for data in a class component",
    "answers": [
      " constructor",
      " componentDidMount",
      " componentWillReceiveProps",
      " componentWillMount"
    ],
    "correctAns": 2
  },
  {
    "query": " Q33. React components are composed to create a user interface. How are components composed",
    "answers": [
      " by putting them in the same file",
      " by nesting components",
      " with webpack",
      " with code splitting"
    ],
    "correctAns": 2
  },
  {
    "query": " Q34. All React components must act like **\\_** with respect to their props",
    "answers": [
      " monads",
      " pure functions",
      " recursive functions",
      " higher-order functions"
    ],
    "correctAns": 2
  },
  {
    "query": " Q35. Why might you use a ref",
    "answers": [
      " to directly access the DOM node",
      " to refer to another JS file",
      " to call a function",
      " to bind the function"
    ],
    "correctAns": 1
  },
  {
    "query": " Q38. What is sent to an `Array.map()` function",
    "answers": [
      " a callback function that is called once for each element in the array",
      " the name of another array to iterate over",
      " the number of times you want to call the function",
      " a string describing what the function should do"
    ],
    "correctAns": 1
  },
  {
    "query": " Q39. Why is it a good idea to pass a function to `setState` instead of an object",
    "answers": [
      " It provides better encapsulation.",
      " It makes sure that the object is not mutated.",
      " It automatically updates a component.",
      " `setState` is asynchronous and might result in out of sync values."
    ],
    "correctAns": 4
  },
  {
    "query": " Q40. What package contains the render() function that renders a React element tree to the DOM",
    "answers": [" `React`", " `ReactDOM`", " `Render`", " `DOM`"],
    "correctAns": 2
  },
  {
    "query": " Q41. How do you set a default value for an uncontrolled form field",
    "answers": [
      " Use the `value` property.",
      " Use the `defaultValue` property.",
      " Use the `default` property.",
      " It assigns one automatically."
    ],
    "correctAns": 2
  },
  {
    "query": " Q43. Which Hook could be used to update the document's title",
    "answers": [
      " `useEffect(function updateTitle() { document.title = name + ' ' + lastname; });`",
      " `useEffect(() => { title = name + ' ' + lastname; });`",
      " `useEffect(function updateTitle() { name + ' ' + lastname; });`",
      " `useEffect(function updateTitle() { title = name + ' ' + lastname; });`"
    ],
    "correctAns": 1
  },
  {
    "query": " Q44. What can you use to wrap Component imports in order to load them lazily",
    "answers": [
      " `React.fallback`",
      " `React.split`",
      " `React.lazy`",
      " `React.memo`"
    ],
    "correctAns": 3
  },
  {
    "query": " Q48. Which answer best describes a function component",
    "answers": [
      " A function component is the same as a class component.",
      " A function component accepts a single props object and returns a React element.",
      " A function component is the only way to create a component.",
      " A function component is required to create a React component."
    ],
    "correctAns": 2
  },
  {
    "query": " Q49. Which library does the `fetch()` function come from",
    "answers": [
      " FetchJS",
      " ReactDOM",
      " No library. `fetch()` is supported by most browsers.",
      " React"
    ],
    "correctAns": 3
  },
  {
    "query": " Q51. Which choice will not cause a React component to rerender",
    "answers": [
      " if the component calls `this.setState(...)`",
      " the value of one of the component's props changes",
      " if the component calls `this.forceUpdate()`",
      " one of the component's siblings rerenders"
    ],
    "correctAns": 4
  },
  {
    "query": " Q58. Which function is used to update state variables in a React class component",
    "answers": [
      " `replaceState`",
      " `refreshState`",
      " `updateState`",
      " `setState`"
    ],
    "correctAns": 4
  },
  {
    "query": " Q60. Which answer best describes a function component",
    "answers": [
      " `A function component is the same as a class component.`",
      " `A function component accepts a single props object and returns a React element.`",
      " `A function component is the only way to create a component.`",
      " `A function component is required to create a React component.`"
    ],
    "correctAns": 2
  },
  {
    "query": " Q61.Which library does the fetch() function come from",
    "answers": [
      " `FetchJS`",
      " `ReactDOM`",
      " `No library. fetch() is supported by most browsers.`",
      " `React`"
    ],
    "correctAns": 3
  },
  {
    "query": " Q67. Why should you use React Router's Link component instead of a basic `<a>` tag in React",
    "answers": [
      " The link component allows the user to use the browser's `Back` button.",
      " There is no difference--the `Link` component is just another name for the `<a>` tag.",
      " The `<a>` tag will cause an error when used in React.",
      " The `<a>` tag triggers a full page reload, while the `Link` component does not."
    ],
    "correctAns": 4
  },
  {
    "query": " Q71. What is the first argument, x, that is sent to the `createElement` function",
    "answers": [
      " the element that should be created",
      " the order in which this element should be placed on the page",
      " the properties of the element",
      " data that should be displayed in the element."
    ],
    "correctAns": 1
  },
  {
    "query": " Q81. What is the first file loaded by the browser in a basic React project",
    "answers": [
      " src/App.js",
      " src/index.js",
      " public/manifest.json",
      " public/index.html"
    ],
    "correctAns": 4
  },
  {
    "query": " Q84. You are rendering a list with React when this warning appears in the console: \"Warning: Each child in a list should have a unique 'key' prop.\" How do you fix this issue",
    "answers": [
      " Pass the name of each item as its key.",
      " Add a key prop with the same value to each item the list.",
      " Clear the console warnings.",
      " When iterating over the list items, add a unique property to each list item."
    ],
    "correctAns": 4
  },
  {
    "query": " Q85. How would you generate the boilerplate code for a new app that you are building to collect underpants",
    "answers": [
      " npm create-react-app collect-underpants",
      " npx start-app collect-underpants",
      " react new collect-underpants",
      " npx create-react-app collect-underpants[Source: React Docs](https://reactjs.org/docs/create-a-new-react-app.html#create-react-app)"
    ],
    "correctAns": 4
  },
  {
    "query": " Q87. What is the process of deciding whether an update is necessary",
    "answers": [" shadow DOM", " fiber", " reconciliation", " setting state"],
    "correctAns": 3
  },
  {
    "query": " Q88. React is an open-source project but is maintained by which company",
    "answers": [" Intuit", " Twitter", " Facebook", " Snapchat"],
    "correctAns": 3
  },
  {
    "query": " Q89. What command can you use to generate a React project",
    "answers": [
      " react-starter",
      " create-react-app",
      " react-gen",
      " react-start"
    ],
    "correctAns": 2
  },
  {
    "query": " Q90. What is the browser extension called that React developers use to debug applications",
    "answers": [
      " React Developer Tools",
      " React Tooling Add-on",
      " React Codewatch",
      " React Debug"
    ],
    "correctAns": 1
  },
  {
    "query": " Q91. Which tool is not part of Create React App",
    "answers": [" React", " jQuery", " webpack", " ReactDOM"],
    "correctAns": 2
  },
  {
    "query": " Q92. What is the JavaScript syntax extension that is commonly used to create React elements",
    "answers": [" HTML", " JavaScriptX", " JSX", " React JavaScript"],
    "correctAns": 3
  },
  {
    "query": " Q93. How might you check property types without using Flow or TypeScript",
    "answers": [
      " Check Manually.",
      " Use `prop-helper`.",
      " use `prop-types`.",
      " user `checker-types`."
    ],
    "correctAns": 3
  },
  {
    "query": " Q94. How do you add an id of heading to the following h1 element",
    "answers": [
      " `let dish = <h1 id={heading}>Mac and Cheese</h1>;`",
      " `let dish = <h1 id=\"heading\">Mac and Cheese</h1>;`",
      " `let dish = <h1 id:\"heading\">Mac and Cheese</h1>;`",
      " `let dish = <h1 class=\"heading\">Mac and Cheese</h1>;`"
    ],
    "correctAns": 2
  },
  {
    "query": " Q3. How do you fix the syntax error that results from running this code",
    "code": "javascriptconst person =(firstName, lastName) =>{  first: firstName,  last: lastName}console.log(person(\"Jill\", \"Wilson\"))",
    "answers": [
      " Wrap the object in parentheses.",
      " Call the function from another file.",
      " Add a return statement before the first curly brace.",
      " Replace the object with an array."
    ]
  },
  {
    "query": " Q5. Using object literal enhancement, you can put values back into an object. When you log person to the console, what is the output",
    "code": "javascriptconst name = 'Rachel';const age = 31;const person = { name, age };console.log(person);",
    "answers": [
      " `{{name: \"Rachel\", age: 31}}`",
      " `{name: \"Rachel\", age: 31}`",
      " `{person: \"Rachel\", person: 31}}`",
      " `{person: {name: \"Rachel\", age: 31}}`"
    ]
  },
  {
    "query": " Q7. To get the first item from the array (\"cooking\") using array destructuring, how do you adjust this line",
    "code": "javascriptconst topics = ['cooking', 'art', 'history'];",
    "answers": [
      " `const first = [\"cooking\", \"art\", \"history\"]`",
      " `const [] = [\"cooking\", \"art\", \"history\"]`",
      " `const [, first][\"cooking\", \"art\", \"history\"]`",
      " `const [first] = [\"cooking\", \"art\", \"history\"]`"
    ]
  },
  {
    "query": " Q9. What should the console read when the following code is run",
    "code": "javascriptconst [, , animal] = ['Horse', 'Mouse', 'Cat'];console.log(animal);",
    "answers": [" Horse", " Cat", " Mouse", " undefined"]
  },
  {
    "query": " 12. Which props from the props object is available to the component with the following syntax",
    "code": "javascript<Message {...props} />",
    "answers": [
      " any that have not changed",
      " all of them",
      " child props",
      " any that have changed"
    ]
  },
  {
    "query": " 13. Consider the following code from React Router. What do you call :id in the path prop",
    "code": "javascript<Route path=\"/:id\" />",
    "answers": [
      " This is a route modal",
      " This is a route parameter",
      " This is a route splitter",
      " This is a route link"
    ]
  },
  {
    "query": " 14. If you created a component called Dish and rendered it to the DOM, what type of element would be rendered",
    "code": "javascriptfunction Dish() {  return <h1>Mac and Cheese</h1>;}ReactDOM.render(<Dish />, document.getElementById('root'));",
    "answers": [" `div`", " section", " component", " `h1`"]
  },
  {
    "query": " 15. What does this React element look like given the following function",
    "code": "javascriptReact.createElement('h1', null, \"What's happening?\");",
    "answers": [
      " `<h1 props={null}>What's happening?</h1>`",
      " `<h1>What's happening?</h1>`",
      " `<h1 id=\"component\">What's happening?</h1>`",
      " `<h1 id=\"element\">What's happening?</h1>`"
    ]
  },
  {
    "query": " 16. What property do you need to add to the Suspense component in order to display a spinner or loading state",
    "code": "javascriptfunction MyComponent() {  return (    <Suspense>      <div>        <Message />      </div>    </Suspense>  );}",
    "answers": [" lazy", " loading", " fallback", " spinner"]
  },
  {
    "query": " 17. What do you call the message wrapped in curly braces below",
    "code": "javascriptconst message = 'Hi there';const element = <p>{message}</p>;",
    "answers": [
      " a JS function",
      " a JS element",
      " a JS expression",
      " a JSX wrapper"
    ]
  },
  {
    "query": " 20. What is the difference between the click behaviors of these two buttons (assuming that this.handleClick is bound correctly)",
    "code": "javascriptA. <button onClick={this.handleClick}>Click Me</button>B. <button onClick={event => this.handleClick(event)}>Click Me</button>",
    "answers": [
      " Button A will not have access to the event object on click of the button.",
      " Button B will not fire the handler this.handleClick successfully.",
      " Button A will not fire the handler this.handleClick successfully.",
      " There is no difference."
    ]
  },
  {
    "query": " 21. How do you destructure the properties that are sent to the Dish component",
    "code": "javascriptfunction Dish(props) {  return (    <h1>      {props.name} {props.cookingTime}    </h1>  );}",
    "answers": [
      " `function Dish([name, cookingTime]) { return <h1>{name} {cookingTime}</h1>; }`",
      " `function Dish({name, cookingTime}) { return <h1>{name} {cookingTime}</h1>; }`",
      " `function Dish(props) { return <h1>{name} {cookingTime}</h1>; }`",
      " `function Dish(...props) { return <h1>{name} {cookingTime}</h1>; }`"
    ]
  },
  {
    "query": " 29. You have written the following code but nothing is rendering. How do you fix this problem",
    "code": "javascriptconst Heading = () => {  <h1>Hello!</h1>;};",
    "answers": [
      " Add a render function.",
      " Change the curly braces to parentheses or add a return statement before the `h1` tag.",
      " Move the `h1` to another component.",
      " Surround the `h1` in a `div`."
    ]
  },
  {
    "query": " Q36. What is `[e.target.id]` called in the following code snippet",
    "code": "javascripthandleChange(e) {  this.setState({ [e.target.id]: e.target.value })}",
    "answers": [
      " a computed property name",
      " a set value",
      " a dynamic key",
      " a JSX code string"
    ]
  },
  {
    "query": " Q37. What is the name of this component",
    "code": "javascriptclass Clock extends React.Component {  render() {    return <h1>Look at the time: {time}</h1>;  }}",
    "answers": [
      " Clock",
      " It does not have a name prop.",
      " React.Component",
      " Component"
    ]
  },
  {
    "query": " Q42. What do you need to change about this code to get it to run",
    "code": "jsclass clock extends React.Component {  render() {    return <h1>Look at the time: {this.props.time}</h1>;  }}",
    "answers": [
      " Add quotes around the return value",
      " Remove `this`",
      " Remove the render method",
      " Capitalize `clock`**Explanation:** In JSX, lower-case tag names are considered to be HTML tags.Read [this article](https://reactjs.org/docs/jsx-in-depth.html#html-tags-vs.-react-components)"
    ]
  },
  {
    "query": " Q45. How do you invoke setDone only when component mounts, using hooks",
    "code": "javascriptfunction MyComponent(props) {  const [done, setDone] = useState(false);  return <h1>Done: {done}</h1>;}",
    "answers": [
      " `useEffect(() => { setDone(true); });`",
      " `useEffect(() => { setDone(true); }, []);`",
      " `useEffect(() => { setDone(true); }, [setDone]);`",
      " `useEffect(() => { setDone(true); }, [done, setDone]);`"
    ]
  },
  {
    "query": " Q46. Which of the following click event handlers will allow you to pass the name of the person to be hugged",
    "code": "javascriptclass Huggable extends React.Component {  hug(id) {    console.log(\"hugging \" + id);  }  render() {    let name = \"kitteh\";    let button = // Missing Code    return button;  }}",
    "answers": [
      " `<button onClick={(name) => this.hug(name)}>Hug Button</button>`",
      " `<button onClick={this.hug(e, name)}>Hug Button</button>`",
      " `<button onClick={(e) => hug(e, name)}>Hug Button</button>`",
      " `<button onClick={(e) => this.hug(name,e)}>Hug Button</button>`"
    ]
  },
  {
    "query": " Q47. Currently, `handleClick` is being called instead of passed as a reference. How do you fix this",
    "code": "javascript<button onClick={this.handleClick()}>Click this</button>",
    "answers": [
      " `<button onClick={this.handleClick.bind(handleClick)}>Click this</button>`",
      " `<button onClick={handleClick()}>Click this</button>`",
      " `<button onClick={this.handleClick}>Click this</button>`",
      " `<button onclick={this.handleClick}>Click this</button>`"
    ]
  },
  {
    "query": " Q50. What will happen when this useEffect Hook is executed, assuming name is not already equal to John",
    "code": "javascriptuseEffect(() => {  setName('John');}, [name]);",
    "answers": [
      " It will cause an error immediately.",
      " It will execute the code inside the function, but only after waiting to ensure that no other component is accessing the name variable.",
      " It will update the value of name once and not run again until name is changed from the outside.",
      " It will cause an infinite loop."
    ]
  },
  {
    "query": " Q52. You have created a new method in a class component called handleClick, but it is not working. Which code is missing",
    "code": "javascriptclass Button extends React.Component{  constructor(props) {    super(props);    // Missing line  }  handleClick() {...}}",
    "answers": [
      " `this.handleClick.bind(this);`",
      " `props.bind(handleClick);`",
      " `this.handleClick.bind();`",
      " `this.handleClick = this.handleClick.bind(this);`"
    ]
  },
  {
    "query": " Q54. If you wanted to display the count state value in the component, what do you need to add to the curly braces in the `h1`",
    "code": "javascriptclass Ticker extends React.component {  constructor(props) {    super(props);    this.state = { count: 0 };  }  render() {    return <h1>{}</h1>;  }}",
    "answers": [" this.state.count", " count", " state", " state.count"]
  },
  {
    "query": " Q55. Per the following code, when is the Hello component displayed",
    "code": "javascriptconst greeting = isLoggedIn ? <Hello /> : null;",
    "answers": [
      " never",
      " when `isLoggedIn` is true",
      " when a user logs in",
      " when the Hello function is called"
    ]
  },
  {
    "query": " Q56. In the following code block, what type is orderNumber",
    "code": "javascriptReactDOM.render(<Message orderNumber=\"16\" />, document.getElementById('root'));",
    "answers": [" string", " boolean", " object", " number"]
  },
  {
    "query": " Q57. You have added a style property to the `h1` but there is an unexpected token error when it runs. How do you fix this",
    "code": "javascriptconst element = <h1 style={ backgroundColor: \"blue\" }>Hi</h1>;",
    "answers": [
      " `const element = <h1 style=\"backgroundColor: \"blue\"\"}>Hi</h1>;`",
      " `const element = <h1 style={{backgroundColor: \"blue\"}}>Hi</h1>;`",
      " `const element = <h1 style={blue}>Hi</h1>;`",
      " `const element = <h1 style=\"blue\">Hi</h1>;`"
    ]
  },
  {
    "query": " Q59. Consider the following component. What is the default color for the star",
    "code": "javascriptconst Star = ({ selected = false }) => <Icon color={selected ? 'red' : 'grey'} />;",
    "answers": [" black", " red", " grey", " white"]
  },
  {
    "query": " Q62.What is the difference between the click behaviors of these two buttons(assuming that this.handleClick is bound correctly)\n\n```javascript\n  A. <button onClick=this.handleClick>Click Me</button>\n  B. <button onClick={event => this.handleClick(event)}>Click Me</button>\n```\n\n- [ ] `Button A will not have access to the event object on click of the button`\n- [x] `Button A will not fire the handler this.handleClick successfully`\n- [ ] `There is no difference`\n- [ ] `Button B will not fire the handler this.handleClick successfully`\n\n",
    "code": "javascript  A. <button onClick=this.handleClick>Click Me</button>  B. <button onClick={event => this.handleClick(event)}>Click Me</button>",
    "answers": [
      " `Button A will not have access to the event object on click of the button`",
      " `Button A will not fire the handler this.handleClick successfully`",
      " `There is no difference`",
      " `Button B will not fire the handler this.handleClick successfully`"
    ]
  },
  {
    "query": " Q63.What will happen when this useEffect Hook is executed, assuming name is not already equal to John",
    "code": "javascriptuseEffect(() => {  setName('John');}, [name]);",
    "answers": [
      " `It will cause an error immediately.`",
      " `It will execute the code inside the function, but only after waiting to ensure that no other component is accessing the name variable.`",
      " `It will update the value of name once and not run again until name is changed from the outside.`",
      " `It will cause an infinite loop.`"
    ]
  },
  {
    "query": " Q66. Give the code below, what does the second argument that is sent to the render function describe",
    "code": "javascriptReactDOM.render(  <h1>Hi<h1>,    document.getElementById('root'))",
    "answers": [
      " where the React element should be added to the DOM",
      " where to call the function",
      " where the root component is",
      " where to create a new JavaScript file"
    ]
  },
  {
    "query": " Q68. What is the first argument, `x`, that is sent to the `createElement` function",
    "code": "javascriptReact.createElement(x, y, z);",
    "answers": [
      " the element that should be created",
      " the order in which this element should be placed on the page",
      " the properties of the element",
      " data that should be displayed in the element"
    ]
  },
  {
    "query": " Q69. Which class-based lifecycle method would be called at the same time as this effect Hook",
    "code": "javascriptuseEffect(() => {  // do things}, []);",
    "answers": [
      " componentWillUnmount",
      " componentDidMount",
      " render",
      " componentDidUpdate"
    ]
  },
  {
    "query": " Q70. Given the code below, what does the second argument that is sent to the render function describe",
    "code": "javascriptReactDOM.render(<h1>Hi</h1>, document.getElementById('root'));",
    "answers": [
      " where the React element should be added to the DOM",
      " where to call the function",
      " where the root component is",
      " where to create a new JavaScript file"
    ]
  },
  {
    "query": " Q72. What is the name of this component",
    "code": "javascriptclass Comp extends React.Component {  render() {    return <h1>Look at the time: {time}</h1>;  }}",
    "answers": [
      " Comp",
      " h1",
      " React.Component",
      " ComponentThis question might be an updated version of Q37."
    ]
  },
  {
    "query": " Q73. When using a portal, what is the first argument",
    "code": "javascriptReactDOM.createPortal(x, y);",
    "answers": [
      " the current state",
      " the element to render",
      " the App component",
      " the page**Explanation:**From official docs: [Portals](https://reactjs.org/docs/portals.html)"
    ]
  },
  {
    "query": " Q74. What is `setCount`",
    "code": "javascriptconst [count, setCount] = useState(0);",
    "answers": [
      " the initial state value",
      " a variable",
      " a state object",
      " a function to update the state**Reference:**From official docs: [Hooks-State](https://reactjs.org/docs/hooks-state.html#:~:text=If%20we%20want%20to%20update%20the%20current)"
    ]
  },
  {
    "query": " Q75. What is the use of map function below",
    "code": "javascriptconst database = [user1:{},user2:{},user3:{}];database.map((user)=><h1>user.data</h1>);",
    "answers": [
      " gives a map of all the entries in database",
      " returns a heading tag for every entry in the database containing it's data",
      " returns one heading tag for all the entries in database",
      " checks which entry in the database is suitable for heading tag"
    ]
  },
  {
    "query": " Q76. Describe what is happening in this code",
    "code": "javascriptconst { name: firstName } = person;",
    "answers": [
      " It is creating a new object that contains the same name property as the person object.",
      " It is assigning the value of the person object's firstName property to a constant called name.",
      " It is retrieving the value of person.name.firstName.",
      " It is assigning the value of the person object's name property to a constant called firstName."
    ]
  },
  {
    "query": " Q77. What is wrong with this code",
    "code": "javascriptconst MyComponent = ({ names }) => (  <h1>Hello</h1>  <p>Hello again</p>);",
    "answers": [
      " React components cannot be defined using functions.",
      " React does not allow components to return more than one element.",
      " The component needs to use the return keyword.",
      " String literals must be surrounded by quotes."
    ]
  },
  {
    "query": " Q78. When using a portal, what is the second argument",
    "code": "javascriptReactDOM.createPortal(x, y);",
    "answers": [
      " the App component",
      " the page",
      " the current state",
      " the DOM element that exists outside of the parent component"
    ]
  },
  {
    "query": " Q79. Given this code, what will be printed in the `<h1>` tag",
    "code": "javascriptconst MyComponent = ({ children }) => (  <h1>{children.length}</h1>);...<MyComponent><p>Hello</p><p>Goodbye</p></MyComponent>",
    "answers": [
      " It will produce an error saying \"cannot read property \"length\" of undefined.\"",
      " 1",
      " undefined",
      " 2"
    ]
  },
  {
    "query": " Q80. What is this pattern called",
    "code": "javascriptconst [count, setCount] = useState(0);",
    "answers": [
      " object destructuring",
      " array destructuring",
      " spread operating",
      " code pushing"
    ]
  },
  {
    "query": " Q82. The code below is rendering nothing, and there is an error that says \"ReactDOM is not defined.\" How do you fix this issue",
    "code": "javascriptimport React from 'react';import { render } from 'react-dom';const element = <h1>Hi</h1>;ReactDOM.render(element, document.getElementById('root'));",
    "answers": [
      " `render(element, document.getElementById(\"root\"));`",
      " `ReactDOM(element, document.getElementById(\"root\"));`",
      " `renderDOM(element, document.getElementById(\"root\"));`",
      " `DOM(element, document.getElementById(\"root\"));`"
    ]
  },
  {
    "query": " Q83. In this component, how do you display whether the user was logged in or not",
    "code": "javascriptrender() {  const isLoggedIn = this.state.isLoggedIn;  return (    <div>      The user is:    </div>  );}",
    "answers": [
      " `The user is loggedIn ? logged in : not logged in.`",
      " Write a function to check the login status.",
      " `The user is {isLoggedIn = \"no\"}.`",
      " `The user is {isLoggedIn ? \"logged in.\" : \"not logged in\"}.`"
    ]
  },
  {
    "query": " Q86. Add the code that will fire the photon torpedoes when the button is clicked.\n\n```javascript\nclass StarTrekkin extends React.Component {\n  firePhotonTorpedoes(e) {\n    console.log('pew pew');\n  }\n  render() {\n    return; // Missing code\n  }\n}\n```\n\n- [ ] `<button onClick={firePhotonTorpedoes()}>Pew Pew</button>`\n- [ ] `<button onClick={firePhotonTorpedoes}>Pew Pew</button>`\n- [ ] `<button onClick={this.firePhotonTorpedoes()}>Pew Pew</button>`\n- [x] `<button onClick={this.firePhotonTorpedoes}>Pew Pew</button>`\n\n[Source: React Docs](https://reactjs.org/docs/handling-events.html)\n\n",
    "code": "javascriptclass StarTrekkin extends React.Component {  firePhotonTorpedoes(e) {    console.log('pew pew');  }  render() {    return; // Missing code  }}",
    "answers": [
      " `<button onClick={firePhotonTorpedoes()}>Pew Pew</button>`",
      " `<button onClick={firePhotonTorpedoes}>Pew Pew</button>`",
      " `<button onClick={this.firePhotonTorpedoes()}>Pew Pew</button>`",
      " `<button onClick={this.firePhotonTorpedoes}>Pew Pew</button>`[Source: React Docs](https://reactjs.org/docs/handling-events.html)"
    ]
  }
]
